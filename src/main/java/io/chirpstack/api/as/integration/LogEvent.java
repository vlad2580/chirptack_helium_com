// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: integration/integration.proto

package io.chirpstack.api.as.integration;

/**
 * <pre>
 * LogEvent is the message sent when a device-related log was sent.
 * </pre>
 *
 * Protobuf type {@code integration.LogEvent}
 */
public final class LogEvent extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:integration.LogEvent)
    LogEventOrBuilder {
private static final long serialVersionUID = 0L;
  // Use LogEvent.newBuilder() to construct.
  private LogEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private LogEvent() {
    level_ = 0;
    code_ = 0;
    description_ = "";
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new LogEvent();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return IntegrationProto.internal_static_integration_LogEvent_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 6:
        return internalGetContext();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return IntegrationProto.internal_static_integration_LogEvent_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            LogEvent.class, Builder.class);
  }

  public static final int TIME_FIELD_NUMBER = 1;
  private com.google.protobuf.Timestamp time_;
  /**
   * <pre>
   * Timestamp.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp time = 1;</code>
   * @return Whether the time field is set.
   */
  @Override
  public boolean hasTime() {
    return time_ != null;
  }
  /**
   * <pre>
   * Timestamp.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp time = 1;</code>
   * @return The time.
   */
  @Override
  public com.google.protobuf.Timestamp getTime() {
    return time_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : time_;
  }
  /**
   * <pre>
   * Timestamp.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp time = 1;</code>
   */
  @Override
  public com.google.protobuf.TimestampOrBuilder getTimeOrBuilder() {
    return getTime();
  }

  public static final int DEVICE_INFO_FIELD_NUMBER = 2;
  private DeviceInfo deviceInfo_;
  /**
   * <pre>
   * Device info.
   * </pre>
   *
   * <code>.integration.DeviceInfo device_info = 2;</code>
   * @return Whether the deviceInfo field is set.
   */
  @Override
  public boolean hasDeviceInfo() {
    return deviceInfo_ != null;
  }
  /**
   * <pre>
   * Device info.
   * </pre>
   *
   * <code>.integration.DeviceInfo device_info = 2;</code>
   * @return The deviceInfo.
   */
  @Override
  public DeviceInfo getDeviceInfo() {
    return deviceInfo_ == null ? DeviceInfo.getDefaultInstance() : deviceInfo_;
  }
  /**
   * <pre>
   * Device info.
   * </pre>
   *
   * <code>.integration.DeviceInfo device_info = 2;</code>
   */
  @Override
  public DeviceInfoOrBuilder getDeviceInfoOrBuilder() {
    return getDeviceInfo();
  }

  public static final int LEVEL_FIELD_NUMBER = 3;
  private int level_;
  /**
   * <pre>
   * Log level.
   * </pre>
   *
   * <code>.integration.LogLevel level = 3;</code>
   * @return The enum numeric value on the wire for level.
   */
  @Override public int getLevelValue() {
    return level_;
  }
  /**
   * <pre>
   * Log level.
   * </pre>
   *
   * <code>.integration.LogLevel level = 3;</code>
   * @return The level.
   */
  @Override public LogLevel getLevel() {
    @SuppressWarnings("deprecation")
    LogLevel result = LogLevel.valueOf(level_);
    return result == null ? LogLevel.UNRECOGNIZED : result;
  }

  public static final int CODE_FIELD_NUMBER = 4;
  private int code_;
  /**
   * <pre>
   * Log code.
   * </pre>
   *
   * <code>.integration.LogCode code = 4;</code>
   * @return The enum numeric value on the wire for code.
   */
  @Override public int getCodeValue() {
    return code_;
  }
  /**
   * <pre>
   * Log code.
   * </pre>
   *
   * <code>.integration.LogCode code = 4;</code>
   * @return The code.
   */
  @Override public LogCode getCode() {
    @SuppressWarnings("deprecation")
    LogCode result = LogCode.valueOf(code_);
    return result == null ? LogCode.UNRECOGNIZED : result;
  }

  public static final int DESCRIPTION_FIELD_NUMBER = 5;
  private volatile Object description_;
  /**
   * <pre>
   * Description message.
   * </pre>
   *
   * <code>string description = 5;</code>
   * @return The description.
   */
  @Override
  public String getDescription() {
    Object ref = description_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      description_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Description message.
   * </pre>
   *
   * <code>string description = 5;</code>
   * @return The bytes for description.
   */
  @Override
  public com.google.protobuf.ByteString
      getDescriptionBytes() {
    Object ref = description_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      description_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CONTEXT_FIELD_NUMBER = 6;
  private static final class ContextDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        String, String> defaultEntry =
            com.google.protobuf.MapEntry
            .<String, String>newDefaultInstance(
                IntegrationProto.internal_static_integration_LogEvent_ContextEntry_descriptor,
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapField<
      String, String> context_;
  private com.google.protobuf.MapField<String, String>
  internalGetContext() {
    if (context_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          ContextDefaultEntryHolder.defaultEntry);
    }
    return context_;
  }

  public int getContextCount() {
    return internalGetContext().getMap().size();
  }
  /**
   * <pre>
   * Context map.
   * </pre>
   *
   * <code>map&lt;string, string&gt; context = 6;</code>
   */

  @Override
  public boolean containsContext(
      String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetContext().getMap().containsKey(key);
  }
  /**
   * Use {@link #getContextMap()} instead.
   */
  @Override
  @Deprecated
  public java.util.Map<String, String> getContext() {
    return getContextMap();
  }
  /**
   * <pre>
   * Context map.
   * </pre>
   *
   * <code>map&lt;string, string&gt; context = 6;</code>
   */
  @Override

  public java.util.Map<String, String> getContextMap() {
    return internalGetContext().getMap();
  }
  /**
   * <pre>
   * Context map.
   * </pre>
   *
   * <code>map&lt;string, string&gt; context = 6;</code>
   */
  @Override

  public String getContextOrDefault(
      String key,
      String defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<String, String> map =
        internalGetContext().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Context map.
   * </pre>
   *
   * <code>map&lt;string, string&gt; context = 6;</code>
   */
  @Override

  public String getContextOrThrow(
      String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<String, String> map =
        internalGetContext().getMap();
    if (!map.containsKey(key)) {
      throw new IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (time_ != null) {
      output.writeMessage(1, getTime());
    }
    if (deviceInfo_ != null) {
      output.writeMessage(2, getDeviceInfo());
    }
    if (level_ != LogLevel.INFO.getNumber()) {
      output.writeEnum(3, level_);
    }
    if (code_ != LogCode.UNKNOWN.getNumber()) {
      output.writeEnum(4, code_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, description_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetContext(),
        ContextDefaultEntryHolder.defaultEntry,
        6);
    getUnknownFields().writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (time_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getTime());
    }
    if (deviceInfo_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getDeviceInfo());
    }
    if (level_ != LogLevel.INFO.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, level_);
    }
    if (code_ != LogCode.UNKNOWN.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, code_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, description_);
    }
    for (java.util.Map.Entry<String, String> entry
         : internalGetContext().getMap().entrySet()) {
      com.google.protobuf.MapEntry<String, String>
      context__ = ContextDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, context__);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof LogEvent)) {
      return super.equals(obj);
    }
    LogEvent other = (LogEvent) obj;

    if (hasTime() != other.hasTime()) return false;
    if (hasTime()) {
      if (!getTime()
          .equals(other.getTime())) return false;
    }
    if (hasDeviceInfo() != other.hasDeviceInfo()) return false;
    if (hasDeviceInfo()) {
      if (!getDeviceInfo()
          .equals(other.getDeviceInfo())) return false;
    }
    if (level_ != other.level_) return false;
    if (code_ != other.code_) return false;
    if (!getDescription()
        .equals(other.getDescription())) return false;
    if (!internalGetContext().equals(
        other.internalGetContext())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasTime()) {
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + getTime().hashCode();
    }
    if (hasDeviceInfo()) {
      hash = (37 * hash) + DEVICE_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceInfo().hashCode();
    }
    hash = (37 * hash) + LEVEL_FIELD_NUMBER;
    hash = (53 * hash) + level_;
    hash = (37 * hash) + CODE_FIELD_NUMBER;
    hash = (53 * hash) + code_;
    hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
    hash = (53 * hash) + getDescription().hashCode();
    if (!internalGetContext().getMap().isEmpty()) {
      hash = (37 * hash) + CONTEXT_FIELD_NUMBER;
      hash = (53 * hash) + internalGetContext().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static LogEvent parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static LogEvent parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static LogEvent parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static LogEvent parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static LogEvent parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static LogEvent parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static LogEvent parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static LogEvent parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static LogEvent parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static LogEvent parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static LogEvent parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static LogEvent parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(LogEvent prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * LogEvent is the message sent when a device-related log was sent.
   * </pre>
   *
   * Protobuf type {@code integration.LogEvent}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:integration.LogEvent)
      LogEventOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return IntegrationProto.internal_static_integration_LogEvent_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 6:
          return internalGetContext();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 6:
          return internalGetMutableContext();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return IntegrationProto.internal_static_integration_LogEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              LogEvent.class, Builder.class);
    }

    // Construct using io.chirpstack.api.as.integration.LogEvent.newBuilder()
    private Builder() {

    }

    private Builder(
        BuilderParent parent) {
      super(parent);

    }
    @Override
    public Builder clear() {
      super.clear();
      if (timeBuilder_ == null) {
        time_ = null;
      } else {
        time_ = null;
        timeBuilder_ = null;
      }
      if (deviceInfoBuilder_ == null) {
        deviceInfo_ = null;
      } else {
        deviceInfo_ = null;
        deviceInfoBuilder_ = null;
      }
      level_ = 0;

      code_ = 0;

      description_ = "";

      internalGetMutableContext().clear();
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return IntegrationProto.internal_static_integration_LogEvent_descriptor;
    }

    @Override
    public LogEvent getDefaultInstanceForType() {
      return LogEvent.getDefaultInstance();
    }

    @Override
    public LogEvent build() {
      LogEvent result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public LogEvent buildPartial() {
      LogEvent result = new LogEvent(this);
      int from_bitField0_ = bitField0_;
      if (timeBuilder_ == null) {
        result.time_ = time_;
      } else {
        result.time_ = timeBuilder_.build();
      }
      if (deviceInfoBuilder_ == null) {
        result.deviceInfo_ = deviceInfo_;
      } else {
        result.deviceInfo_ = deviceInfoBuilder_.build();
      }
      result.level_ = level_;
      result.code_ = code_;
      result.description_ = description_;
      result.context_ = internalGetContext();
      result.context_.makeImmutable();
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof LogEvent) {
        return mergeFrom((LogEvent)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(LogEvent other) {
      if (other == LogEvent.getDefaultInstance()) return this;
      if (other.hasTime()) {
        mergeTime(other.getTime());
      }
      if (other.hasDeviceInfo()) {
        mergeDeviceInfo(other.getDeviceInfo());
      }
      if (other.level_ != 0) {
        setLevelValue(other.getLevelValue());
      }
      if (other.code_ != 0) {
        setCodeValue(other.getCodeValue());
      }
      if (!other.getDescription().isEmpty()) {
        description_ = other.description_;
        onChanged();
      }
      internalGetMutableContext().mergeFrom(
          other.internalGetContext());
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getTimeFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getDeviceInfoFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 18
            case 24: {
              level_ = input.readEnum();

              break;
            } // case 24
            case 32: {
              code_ = input.readEnum();

              break;
            } // case 32
            case 42: {
              description_ = input.readStringRequireUtf8();

              break;
            } // case 42
            case 50: {
              com.google.protobuf.MapEntry<String, String>
              context__ = input.readMessage(
                  ContextDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableContext().getMutableMap().put(
                  context__.getKey(), context__.getValue());
              break;
            } // case 50
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.Timestamp time_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> timeBuilder_;
    /**
     * <pre>
     * Timestamp.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp time = 1;</code>
     * @return Whether the time field is set.
     */
    public boolean hasTime() {
      return timeBuilder_ != null || time_ != null;
    }
    /**
     * <pre>
     * Timestamp.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp time = 1;</code>
     * @return The time.
     */
    public com.google.protobuf.Timestamp getTime() {
      if (timeBuilder_ == null) {
        return time_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : time_;
      } else {
        return timeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Timestamp.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp time = 1;</code>
     */
    public Builder setTime(com.google.protobuf.Timestamp value) {
      if (timeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        time_ = value;
        onChanged();
      } else {
        timeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Timestamp.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp time = 1;</code>
     */
    public Builder setTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (timeBuilder_ == null) {
        time_ = builderForValue.build();
        onChanged();
      } else {
        timeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Timestamp.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp time = 1;</code>
     */
    public Builder mergeTime(com.google.protobuf.Timestamp value) {
      if (timeBuilder_ == null) {
        if (time_ != null) {
          time_ =
            com.google.protobuf.Timestamp.newBuilder(time_).mergeFrom(value).buildPartial();
        } else {
          time_ = value;
        }
        onChanged();
      } else {
        timeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Timestamp.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp time = 1;</code>
     */
    public Builder clearTime() {
      if (timeBuilder_ == null) {
        time_ = null;
        onChanged();
      } else {
        time_ = null;
        timeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Timestamp.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp time = 1;</code>
     */
    public com.google.protobuf.Timestamp.Builder getTimeBuilder() {
      
      onChanged();
      return getTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Timestamp.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp time = 1;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getTimeOrBuilder() {
      if (timeBuilder_ != null) {
        return timeBuilder_.getMessageOrBuilder();
      } else {
        return time_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : time_;
      }
    }
    /**
     * <pre>
     * Timestamp.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp time = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getTimeFieldBuilder() {
      if (timeBuilder_ == null) {
        timeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getTime(),
                getParentForChildren(),
                isClean());
        time_ = null;
      }
      return timeBuilder_;
    }

    private DeviceInfo deviceInfo_;
    private com.google.protobuf.SingleFieldBuilderV3<
        DeviceInfo, DeviceInfo.Builder, DeviceInfoOrBuilder> deviceInfoBuilder_;
    /**
     * <pre>
     * Device info.
     * </pre>
     *
     * <code>.integration.DeviceInfo device_info = 2;</code>
     * @return Whether the deviceInfo field is set.
     */
    public boolean hasDeviceInfo() {
      return deviceInfoBuilder_ != null || deviceInfo_ != null;
    }
    /**
     * <pre>
     * Device info.
     * </pre>
     *
     * <code>.integration.DeviceInfo device_info = 2;</code>
     * @return The deviceInfo.
     */
    public DeviceInfo getDeviceInfo() {
      if (deviceInfoBuilder_ == null) {
        return deviceInfo_ == null ? DeviceInfo.getDefaultInstance() : deviceInfo_;
      } else {
        return deviceInfoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Device info.
     * </pre>
     *
     * <code>.integration.DeviceInfo device_info = 2;</code>
     */
    public Builder setDeviceInfo(DeviceInfo value) {
      if (deviceInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        deviceInfo_ = value;
        onChanged();
      } else {
        deviceInfoBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Device info.
     * </pre>
     *
     * <code>.integration.DeviceInfo device_info = 2;</code>
     */
    public Builder setDeviceInfo(
        DeviceInfo.Builder builderForValue) {
      if (deviceInfoBuilder_ == null) {
        deviceInfo_ = builderForValue.build();
        onChanged();
      } else {
        deviceInfoBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Device info.
     * </pre>
     *
     * <code>.integration.DeviceInfo device_info = 2;</code>
     */
    public Builder mergeDeviceInfo(DeviceInfo value) {
      if (deviceInfoBuilder_ == null) {
        if (deviceInfo_ != null) {
          deviceInfo_ =
            DeviceInfo.newBuilder(deviceInfo_).mergeFrom(value).buildPartial();
        } else {
          deviceInfo_ = value;
        }
        onChanged();
      } else {
        deviceInfoBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Device info.
     * </pre>
     *
     * <code>.integration.DeviceInfo device_info = 2;</code>
     */
    public Builder clearDeviceInfo() {
      if (deviceInfoBuilder_ == null) {
        deviceInfo_ = null;
        onChanged();
      } else {
        deviceInfo_ = null;
        deviceInfoBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Device info.
     * </pre>
     *
     * <code>.integration.DeviceInfo device_info = 2;</code>
     */
    public DeviceInfo.Builder getDeviceInfoBuilder() {
      
      onChanged();
      return getDeviceInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Device info.
     * </pre>
     *
     * <code>.integration.DeviceInfo device_info = 2;</code>
     */
    public DeviceInfoOrBuilder getDeviceInfoOrBuilder() {
      if (deviceInfoBuilder_ != null) {
        return deviceInfoBuilder_.getMessageOrBuilder();
      } else {
        return deviceInfo_ == null ?
            DeviceInfo.getDefaultInstance() : deviceInfo_;
      }
    }
    /**
     * <pre>
     * Device info.
     * </pre>
     *
     * <code>.integration.DeviceInfo device_info = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        DeviceInfo, DeviceInfo.Builder, DeviceInfoOrBuilder>
        getDeviceInfoFieldBuilder() {
      if (deviceInfoBuilder_ == null) {
        deviceInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            DeviceInfo, DeviceInfo.Builder, DeviceInfoOrBuilder>(
                getDeviceInfo(),
                getParentForChildren(),
                isClean());
        deviceInfo_ = null;
      }
      return deviceInfoBuilder_;
    }

    private int level_ = 0;
    /**
     * <pre>
     * Log level.
     * </pre>
     *
     * <code>.integration.LogLevel level = 3;</code>
     * @return The enum numeric value on the wire for level.
     */
    @Override public int getLevelValue() {
      return level_;
    }
    /**
     * <pre>
     * Log level.
     * </pre>
     *
     * <code>.integration.LogLevel level = 3;</code>
     * @param value The enum numeric value on the wire for level to set.
     * @return This builder for chaining.
     */
    public Builder setLevelValue(int value) {
      
      level_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Log level.
     * </pre>
     *
     * <code>.integration.LogLevel level = 3;</code>
     * @return The level.
     */
    @Override
    public LogLevel getLevel() {
      @SuppressWarnings("deprecation")
      LogLevel result = LogLevel.valueOf(level_);
      return result == null ? LogLevel.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Log level.
     * </pre>
     *
     * <code>.integration.LogLevel level = 3;</code>
     * @param value The level to set.
     * @return This builder for chaining.
     */
    public Builder setLevel(LogLevel value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      level_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Log level.
     * </pre>
     *
     * <code>.integration.LogLevel level = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearLevel() {
      
      level_ = 0;
      onChanged();
      return this;
    }

    private int code_ = 0;
    /**
     * <pre>
     * Log code.
     * </pre>
     *
     * <code>.integration.LogCode code = 4;</code>
     * @return The enum numeric value on the wire for code.
     */
    @Override public int getCodeValue() {
      return code_;
    }
    /**
     * <pre>
     * Log code.
     * </pre>
     *
     * <code>.integration.LogCode code = 4;</code>
     * @param value The enum numeric value on the wire for code to set.
     * @return This builder for chaining.
     */
    public Builder setCodeValue(int value) {
      
      code_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Log code.
     * </pre>
     *
     * <code>.integration.LogCode code = 4;</code>
     * @return The code.
     */
    @Override
    public LogCode getCode() {
      @SuppressWarnings("deprecation")
      LogCode result = LogCode.valueOf(code_);
      return result == null ? LogCode.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Log code.
     * </pre>
     *
     * <code>.integration.LogCode code = 4;</code>
     * @param value The code to set.
     * @return This builder for chaining.
     */
    public Builder setCode(LogCode value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      code_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Log code.
     * </pre>
     *
     * <code>.integration.LogCode code = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearCode() {
      
      code_ = 0;
      onChanged();
      return this;
    }

    private Object description_ = "";
    /**
     * <pre>
     * Description message.
     * </pre>
     *
     * <code>string description = 5;</code>
     * @return The description.
     */
    public String getDescription() {
      Object ref = description_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        description_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     * Description message.
     * </pre>
     *
     * <code>string description = 5;</code>
     * @return The bytes for description.
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      Object ref = description_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Description message.
     * </pre>
     *
     * <code>string description = 5;</code>
     * @param value The description to set.
     * @return This builder for chaining.
     */
    public Builder setDescription(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      description_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Description message.
     * </pre>
     *
     * <code>string description = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearDescription() {
      
      description_ = getDefaultInstance().getDescription();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Description message.
     * </pre>
     *
     * <code>string description = 5;</code>
     * @param value The bytes for description to set.
     * @return This builder for chaining.
     */
    public Builder setDescriptionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      description_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        String, String> context_;
    private com.google.protobuf.MapField<String, String>
    internalGetContext() {
      if (context_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ContextDefaultEntryHolder.defaultEntry);
      }
      return context_;
    }
    private com.google.protobuf.MapField<String, String>
    internalGetMutableContext() {
      onChanged();;
      if (context_ == null) {
        context_ = com.google.protobuf.MapField.newMapField(
            ContextDefaultEntryHolder.defaultEntry);
      }
      if (!context_.isMutable()) {
        context_ = context_.copy();
      }
      return context_;
    }

    public int getContextCount() {
      return internalGetContext().getMap().size();
    }
    /**
     * <pre>
     * Context map.
     * </pre>
     *
     * <code>map&lt;string, string&gt; context = 6;</code>
     */

    @Override
    public boolean containsContext(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetContext().getMap().containsKey(key);
    }
    /**
     * Use {@link #getContextMap()} instead.
     */
    @Override
    @Deprecated
    public java.util.Map<String, String> getContext() {
      return getContextMap();
    }
    /**
     * <pre>
     * Context map.
     * </pre>
     *
     * <code>map&lt;string, string&gt; context = 6;</code>
     */
    @Override

    public java.util.Map<String, String> getContextMap() {
      return internalGetContext().getMap();
    }
    /**
     * <pre>
     * Context map.
     * </pre>
     *
     * <code>map&lt;string, string&gt; context = 6;</code>
     */
    @Override

    public String getContextOrDefault(
        String key,
        String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<String, String> map =
          internalGetContext().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Context map.
     * </pre>
     *
     * <code>map&lt;string, string&gt; context = 6;</code>
     */
    @Override

    public String getContextOrThrow(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<String, String> map =
          internalGetContext().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearContext() {
      internalGetMutableContext().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Context map.
     * </pre>
     *
     * <code>map&lt;string, string&gt; context = 6;</code>
     */

    public Builder removeContext(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableContext().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @Deprecated
    public java.util.Map<String, String>
    getMutableContext() {
      return internalGetMutableContext().getMutableMap();
    }
    /**
     * <pre>
     * Context map.
     * </pre>
     *
     * <code>map&lt;string, string&gt; context = 6;</code>
     */
    public Builder putContext(
        String key,
        String value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutableContext().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * Context map.
     * </pre>
     *
     * <code>map&lt;string, string&gt; context = 6;</code>
     */

    public Builder putAllContext(
        java.util.Map<String, String> values) {
      internalGetMutableContext().getMutableMap()
          .putAll(values);
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:integration.LogEvent)
  }

  // @@protoc_insertion_point(class_scope:integration.LogEvent)
  private static final LogEvent DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new LogEvent();
  }

  public static LogEvent getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<LogEvent>
      PARSER = new com.google.protobuf.AbstractParser<LogEvent>() {
    @Override
    public LogEvent parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<LogEvent> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<LogEvent> getParserForType() {
    return PARSER;
  }

  @Override
  public LogEvent getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

