// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: integration/integration.proto

package io.chirpstack.api.as.integration;

public interface UplinkEventOrBuilder extends
    // @@protoc_insertion_point(interface_extends:integration.UplinkEvent)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Deduplication ID (UUID).
   * </pre>
   *
   * <code>string deduplication_id = 1;</code>
   * @return The deduplicationId.
   */
  String getDeduplicationId();
  /**
   * <pre>
   * Deduplication ID (UUID).
   * </pre>
   *
   * <code>string deduplication_id = 1;</code>
   * @return The bytes for deduplicationId.
   */
  com.google.protobuf.ByteString
      getDeduplicationIdBytes();

  /**
   * <pre>
   * Timestamp.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp time = 2;</code>
   * @return Whether the time field is set.
   */
  boolean hasTime();
  /**
   * <pre>
   * Timestamp.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp time = 2;</code>
   * @return The time.
   */
  com.google.protobuf.Timestamp getTime();
  /**
   * <pre>
   * Timestamp.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp time = 2;</code>
   */
  com.google.protobuf.TimestampOrBuilder getTimeOrBuilder();

  /**
   * <pre>
   * Device information.
   * </pre>
   *
   * <code>.integration.DeviceInfo device_info = 3;</code>
   * @return Whether the deviceInfo field is set.
   */
  boolean hasDeviceInfo();
  /**
   * <pre>
   * Device information.
   * </pre>
   *
   * <code>.integration.DeviceInfo device_info = 3;</code>
   * @return The deviceInfo.
   */
  DeviceInfo getDeviceInfo();
  /**
   * <pre>
   * Device information.
   * </pre>
   *
   * <code>.integration.DeviceInfo device_info = 3;</code>
   */
  DeviceInfoOrBuilder getDeviceInfoOrBuilder();

  /**
   * <pre>
   * Device address.
   * </pre>
   *
   * <code>string dev_addr = 4;</code>
   * @return The devAddr.
   */
  String getDevAddr();
  /**
   * <pre>
   * Device address.
   * </pre>
   *
   * <code>string dev_addr = 4;</code>
   * @return The bytes for devAddr.
   */
  com.google.protobuf.ByteString
      getDevAddrBytes();

  /**
   * <pre>
   * Device has ADR bit set.
   * </pre>
   *
   * <code>bool adr = 5;</code>
   * @return The adr.
   */
  boolean getAdr();

  /**
   * <pre>
   * Data-rate.
   * </pre>
   *
   * <code>uint32 dr = 6;</code>
   * @return The dr.
   */
  int getDr();

  /**
   * <pre>
   * Frame counter.
   * </pre>
   *
   * <code>uint32 f_cnt = 7;</code>
   * @return The fCnt.
   */
  int getFCnt();

  /**
   * <pre>
   * Frame port.
   * </pre>
   *
   * <code>uint32 f_port = 8;</code>
   * @return The fPort.
   */
  int getFPort();

  /**
   * <pre>
   * Uplink was of type confirmed.
   * </pre>
   *
   * <code>bool confirmed = 9;</code>
   * @return The confirmed.
   */
  boolean getConfirmed();

  /**
   * <pre>
   * FRMPayload data.
   * </pre>
   *
   * <code>bytes data = 10;</code>
   * @return The data.
   */
  com.google.protobuf.ByteString getData();

  /**
   * <pre>
   * Note that this is only set when a codec is configured in the Device Profile.
   * </pre>
   *
   * <code>.google.protobuf.Struct object = 11;</code>
   * @return Whether the object field is set.
   */
  boolean hasObject();
  /**
   * <pre>
   * Note that this is only set when a codec is configured in the Device Profile.
   * </pre>
   *
   * <code>.google.protobuf.Struct object = 11;</code>
   * @return The object.
   */
  com.google.protobuf.Struct getObject();
  /**
   * <pre>
   * Note that this is only set when a codec is configured in the Device Profile.
   * </pre>
   *
   * <code>.google.protobuf.Struct object = 11;</code>
   */
  com.google.protobuf.StructOrBuilder getObjectOrBuilder();

  /**
   * <pre>
   * Receiving gateway RX info.
   * </pre>
   *
   * <code>repeated .gw.UplinkRxInfo rx_info = 12;</code>
   */
  java.util.List<io.chirpstack.api.gw.UplinkRxInfo> 
      getRxInfoList();
  /**
   * <pre>
   * Receiving gateway RX info.
   * </pre>
   *
   * <code>repeated .gw.UplinkRxInfo rx_info = 12;</code>
   */
  io.chirpstack.api.gw.UplinkRxInfo getRxInfo(int index);
  /**
   * <pre>
   * Receiving gateway RX info.
   * </pre>
   *
   * <code>repeated .gw.UplinkRxInfo rx_info = 12;</code>
   */
  int getRxInfoCount();
  /**
   * <pre>
   * Receiving gateway RX info.
   * </pre>
   *
   * <code>repeated .gw.UplinkRxInfo rx_info = 12;</code>
   */
  java.util.List<? extends io.chirpstack.api.gw.UplinkRxInfoOrBuilder> 
      getRxInfoOrBuilderList();
  /**
   * <pre>
   * Receiving gateway RX info.
   * </pre>
   *
   * <code>repeated .gw.UplinkRxInfo rx_info = 12;</code>
   */
  io.chirpstack.api.gw.UplinkRxInfoOrBuilder getRxInfoOrBuilder(
      int index);

  /**
   * <pre>
   * TX info.
   * </pre>
   *
   * <code>.gw.UplinkTxInfo tx_info = 13;</code>
   * @return Whether the txInfo field is set.
   */
  boolean hasTxInfo();
  /**
   * <pre>
   * TX info.
   * </pre>
   *
   * <code>.gw.UplinkTxInfo tx_info = 13;</code>
   * @return The txInfo.
   */
  io.chirpstack.api.gw.UplinkTxInfo getTxInfo();
  /**
   * <pre>
   * TX info.
   * </pre>
   *
   * <code>.gw.UplinkTxInfo tx_info = 13;</code>
   */
  io.chirpstack.api.gw.UplinkTxInfoOrBuilder getTxInfoOrBuilder();
}
