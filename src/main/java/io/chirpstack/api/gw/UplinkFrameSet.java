// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gw/gw.proto

package io.chirpstack.api.gw;

/**
 * Protobuf type {@code gw.UplinkFrameSet}
 */
public final class UplinkFrameSet extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:gw.UplinkFrameSet)
    UplinkFrameSetOrBuilder {
private static final long serialVersionUID = 0L;
  // Use UplinkFrameSet.newBuilder() to construct.
  private UplinkFrameSet(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private UplinkFrameSet() {
    phyPayload_ = com.google.protobuf.ByteString.EMPTY;
    rxInfo_ = java.util.Collections.emptyList();
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new UplinkFrameSet();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return GatewayProto.internal_static_gw_UplinkFrameSet_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return GatewayProto.internal_static_gw_UplinkFrameSet_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            UplinkFrameSet.class, Builder.class);
  }

  public static final int PHY_PAYLOAD_FIELD_NUMBER = 1;
  private com.google.protobuf.ByteString phyPayload_;
  /**
   * <pre>
   * PHYPayload.
   * </pre>
   *
   * <code>bytes phy_payload = 1;</code>
   * @return The phyPayload.
   */
  @Override
  public com.google.protobuf.ByteString getPhyPayload() {
    return phyPayload_;
  }

  public static final int TX_INFO_FIELD_NUMBER = 2;
  private UplinkTxInfo txInfo_;
  /**
   * <pre>
   * TX meta-data.
   * </pre>
   *
   * <code>.gw.UplinkTxInfo tx_info = 2;</code>
   * @return Whether the txInfo field is set.
   */
  @Override
  public boolean hasTxInfo() {
    return txInfo_ != null;
  }
  /**
   * <pre>
   * TX meta-data.
   * </pre>
   *
   * <code>.gw.UplinkTxInfo tx_info = 2;</code>
   * @return The txInfo.
   */
  @Override
  public UplinkTxInfo getTxInfo() {
    return txInfo_ == null ? UplinkTxInfo.getDefaultInstance() : txInfo_;
  }
  /**
   * <pre>
   * TX meta-data.
   * </pre>
   *
   * <code>.gw.UplinkTxInfo tx_info = 2;</code>
   */
  @Override
  public UplinkTxInfoOrBuilder getTxInfoOrBuilder() {
    return getTxInfo();
  }

  public static final int RX_INFO_FIELD_NUMBER = 3;
  private java.util.List<UplinkRxInfo> rxInfo_;
  /**
   * <pre>
   * RX meta-data set.
   * </pre>
   *
   * <code>repeated .gw.UplinkRxInfo rx_info = 3;</code>
   */
  @Override
  public java.util.List<UplinkRxInfo> getRxInfoList() {
    return rxInfo_;
  }
  /**
   * <pre>
   * RX meta-data set.
   * </pre>
   *
   * <code>repeated .gw.UplinkRxInfo rx_info = 3;</code>
   */
  @Override
  public java.util.List<? extends UplinkRxInfoOrBuilder>
      getRxInfoOrBuilderList() {
    return rxInfo_;
  }
  /**
   * <pre>
   * RX meta-data set.
   * </pre>
   *
   * <code>repeated .gw.UplinkRxInfo rx_info = 3;</code>
   */
  @Override
  public int getRxInfoCount() {
    return rxInfo_.size();
  }
  /**
   * <pre>
   * RX meta-data set.
   * </pre>
   *
   * <code>repeated .gw.UplinkRxInfo rx_info = 3;</code>
   */
  @Override
  public UplinkRxInfo getRxInfo(int index) {
    return rxInfo_.get(index);
  }
  /**
   * <pre>
   * RX meta-data set.
   * </pre>
   *
   * <code>repeated .gw.UplinkRxInfo rx_info = 3;</code>
   */
  @Override
  public UplinkRxInfoOrBuilder getRxInfoOrBuilder(
      int index) {
    return rxInfo_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!phyPayload_.isEmpty()) {
      output.writeBytes(1, phyPayload_);
    }
    if (txInfo_ != null) {
      output.writeMessage(2, getTxInfo());
    }
    for (int i = 0; i < rxInfo_.size(); i++) {
      output.writeMessage(3, rxInfo_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!phyPayload_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(1, phyPayload_);
    }
    if (txInfo_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getTxInfo());
    }
    for (int i = 0; i < rxInfo_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, rxInfo_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof UplinkFrameSet)) {
      return super.equals(obj);
    }
    UplinkFrameSet other = (UplinkFrameSet) obj;

    if (!getPhyPayload()
        .equals(other.getPhyPayload())) return false;
    if (hasTxInfo() != other.hasTxInfo()) return false;
    if (hasTxInfo()) {
      if (!getTxInfo()
          .equals(other.getTxInfo())) return false;
    }
    if (!getRxInfoList()
        .equals(other.getRxInfoList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + PHY_PAYLOAD_FIELD_NUMBER;
    hash = (53 * hash) + getPhyPayload().hashCode();
    if (hasTxInfo()) {
      hash = (37 * hash) + TX_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getTxInfo().hashCode();
    }
    if (getRxInfoCount() > 0) {
      hash = (37 * hash) + RX_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getRxInfoList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static UplinkFrameSet parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static UplinkFrameSet parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static UplinkFrameSet parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static UplinkFrameSet parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static UplinkFrameSet parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static UplinkFrameSet parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static UplinkFrameSet parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static UplinkFrameSet parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static UplinkFrameSet parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static UplinkFrameSet parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static UplinkFrameSet parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static UplinkFrameSet parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(UplinkFrameSet prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code gw.UplinkFrameSet}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:gw.UplinkFrameSet)
      UplinkFrameSetOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GatewayProto.internal_static_gw_UplinkFrameSet_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GatewayProto.internal_static_gw_UplinkFrameSet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              UplinkFrameSet.class, Builder.class);
    }

    // Construct using io.chirpstack.api.gw.UplinkFrameSet.newBuilder()
    private Builder() {

    }

    private Builder(
        BuilderParent parent) {
      super(parent);

    }
    @Override
    public Builder clear() {
      super.clear();
      phyPayload_ = com.google.protobuf.ByteString.EMPTY;

      if (txInfoBuilder_ == null) {
        txInfo_ = null;
      } else {
        txInfo_ = null;
        txInfoBuilder_ = null;
      }
      if (rxInfoBuilder_ == null) {
        rxInfo_ = java.util.Collections.emptyList();
      } else {
        rxInfo_ = null;
        rxInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return GatewayProto.internal_static_gw_UplinkFrameSet_descriptor;
    }

    @Override
    public UplinkFrameSet getDefaultInstanceForType() {
      return UplinkFrameSet.getDefaultInstance();
    }

    @Override
    public UplinkFrameSet build() {
      UplinkFrameSet result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public UplinkFrameSet buildPartial() {
      UplinkFrameSet result = new UplinkFrameSet(this);
      int from_bitField0_ = bitField0_;
      result.phyPayload_ = phyPayload_;
      if (txInfoBuilder_ == null) {
        result.txInfo_ = txInfo_;
      } else {
        result.txInfo_ = txInfoBuilder_.build();
      }
      if (rxInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          rxInfo_ = java.util.Collections.unmodifiableList(rxInfo_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.rxInfo_ = rxInfo_;
      } else {
        result.rxInfo_ = rxInfoBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof UplinkFrameSet) {
        return mergeFrom((UplinkFrameSet)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(UplinkFrameSet other) {
      if (other == UplinkFrameSet.getDefaultInstance()) return this;
      if (other.getPhyPayload() != com.google.protobuf.ByteString.EMPTY) {
        setPhyPayload(other.getPhyPayload());
      }
      if (other.hasTxInfo()) {
        mergeTxInfo(other.getTxInfo());
      }
      if (rxInfoBuilder_ == null) {
        if (!other.rxInfo_.isEmpty()) {
          if (rxInfo_.isEmpty()) {
            rxInfo_ = other.rxInfo_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureRxInfoIsMutable();
            rxInfo_.addAll(other.rxInfo_);
          }
          onChanged();
        }
      } else {
        if (!other.rxInfo_.isEmpty()) {
          if (rxInfoBuilder_.isEmpty()) {
            rxInfoBuilder_.dispose();
            rxInfoBuilder_ = null;
            rxInfo_ = other.rxInfo_;
            bitField0_ = (bitField0_ & ~0x00000001);
            rxInfoBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getRxInfoFieldBuilder() : null;
          } else {
            rxInfoBuilder_.addAllMessages(other.rxInfo_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              phyPayload_ = input.readBytes();

              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getTxInfoFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 18
            case 26: {
              UplinkRxInfo m =
                  input.readMessage(
                      UplinkRxInfo.parser(),
                      extensionRegistry);
              if (rxInfoBuilder_ == null) {
                ensureRxInfoIsMutable();
                rxInfo_.add(m);
              } else {
                rxInfoBuilder_.addMessage(m);
              }
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.ByteString phyPayload_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * PHYPayload.
     * </pre>
     *
     * <code>bytes phy_payload = 1;</code>
     * @return The phyPayload.
     */
    @Override
    public com.google.protobuf.ByteString getPhyPayload() {
      return phyPayload_;
    }
    /**
     * <pre>
     * PHYPayload.
     * </pre>
     *
     * <code>bytes phy_payload = 1;</code>
     * @param value The phyPayload to set.
     * @return This builder for chaining.
     */
    public Builder setPhyPayload(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      phyPayload_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * PHYPayload.
     * </pre>
     *
     * <code>bytes phy_payload = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearPhyPayload() {
      
      phyPayload_ = getDefaultInstance().getPhyPayload();
      onChanged();
      return this;
    }

    private UplinkTxInfo txInfo_;
    private com.google.protobuf.SingleFieldBuilderV3<
        UplinkTxInfo, UplinkTxInfo.Builder, UplinkTxInfoOrBuilder> txInfoBuilder_;
    /**
     * <pre>
     * TX meta-data.
     * </pre>
     *
     * <code>.gw.UplinkTxInfo tx_info = 2;</code>
     * @return Whether the txInfo field is set.
     */
    public boolean hasTxInfo() {
      return txInfoBuilder_ != null || txInfo_ != null;
    }
    /**
     * <pre>
     * TX meta-data.
     * </pre>
     *
     * <code>.gw.UplinkTxInfo tx_info = 2;</code>
     * @return The txInfo.
     */
    public UplinkTxInfo getTxInfo() {
      if (txInfoBuilder_ == null) {
        return txInfo_ == null ? UplinkTxInfo.getDefaultInstance() : txInfo_;
      } else {
        return txInfoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * TX meta-data.
     * </pre>
     *
     * <code>.gw.UplinkTxInfo tx_info = 2;</code>
     */
    public Builder setTxInfo(UplinkTxInfo value) {
      if (txInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        txInfo_ = value;
        onChanged();
      } else {
        txInfoBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * TX meta-data.
     * </pre>
     *
     * <code>.gw.UplinkTxInfo tx_info = 2;</code>
     */
    public Builder setTxInfo(
        UplinkTxInfo.Builder builderForValue) {
      if (txInfoBuilder_ == null) {
        txInfo_ = builderForValue.build();
        onChanged();
      } else {
        txInfoBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * TX meta-data.
     * </pre>
     *
     * <code>.gw.UplinkTxInfo tx_info = 2;</code>
     */
    public Builder mergeTxInfo(UplinkTxInfo value) {
      if (txInfoBuilder_ == null) {
        if (txInfo_ != null) {
          txInfo_ =
            UplinkTxInfo.newBuilder(txInfo_).mergeFrom(value).buildPartial();
        } else {
          txInfo_ = value;
        }
        onChanged();
      } else {
        txInfoBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * TX meta-data.
     * </pre>
     *
     * <code>.gw.UplinkTxInfo tx_info = 2;</code>
     */
    public Builder clearTxInfo() {
      if (txInfoBuilder_ == null) {
        txInfo_ = null;
        onChanged();
      } else {
        txInfo_ = null;
        txInfoBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * TX meta-data.
     * </pre>
     *
     * <code>.gw.UplinkTxInfo tx_info = 2;</code>
     */
    public UplinkTxInfo.Builder getTxInfoBuilder() {
      
      onChanged();
      return getTxInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * TX meta-data.
     * </pre>
     *
     * <code>.gw.UplinkTxInfo tx_info = 2;</code>
     */
    public UplinkTxInfoOrBuilder getTxInfoOrBuilder() {
      if (txInfoBuilder_ != null) {
        return txInfoBuilder_.getMessageOrBuilder();
      } else {
        return txInfo_ == null ?
            UplinkTxInfo.getDefaultInstance() : txInfo_;
      }
    }
    /**
     * <pre>
     * TX meta-data.
     * </pre>
     *
     * <code>.gw.UplinkTxInfo tx_info = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        UplinkTxInfo, UplinkTxInfo.Builder, UplinkTxInfoOrBuilder>
        getTxInfoFieldBuilder() {
      if (txInfoBuilder_ == null) {
        txInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            UplinkTxInfo, UplinkTxInfo.Builder, UplinkTxInfoOrBuilder>(
                getTxInfo(),
                getParentForChildren(),
                isClean());
        txInfo_ = null;
      }
      return txInfoBuilder_;
    }

    private java.util.List<UplinkRxInfo> rxInfo_ =
      java.util.Collections.emptyList();
    private void ensureRxInfoIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        rxInfo_ = new java.util.ArrayList<UplinkRxInfo>(rxInfo_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        UplinkRxInfo, UplinkRxInfo.Builder, UplinkRxInfoOrBuilder> rxInfoBuilder_;

    /**
     * <pre>
     * RX meta-data set.
     * </pre>
     *
     * <code>repeated .gw.UplinkRxInfo rx_info = 3;</code>
     */
    public java.util.List<UplinkRxInfo> getRxInfoList() {
      if (rxInfoBuilder_ == null) {
        return java.util.Collections.unmodifiableList(rxInfo_);
      } else {
        return rxInfoBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * RX meta-data set.
     * </pre>
     *
     * <code>repeated .gw.UplinkRxInfo rx_info = 3;</code>
     */
    public int getRxInfoCount() {
      if (rxInfoBuilder_ == null) {
        return rxInfo_.size();
      } else {
        return rxInfoBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * RX meta-data set.
     * </pre>
     *
     * <code>repeated .gw.UplinkRxInfo rx_info = 3;</code>
     */
    public UplinkRxInfo getRxInfo(int index) {
      if (rxInfoBuilder_ == null) {
        return rxInfo_.get(index);
      } else {
        return rxInfoBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * RX meta-data set.
     * </pre>
     *
     * <code>repeated .gw.UplinkRxInfo rx_info = 3;</code>
     */
    public Builder setRxInfo(
        int index, UplinkRxInfo value) {
      if (rxInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRxInfoIsMutable();
        rxInfo_.set(index, value);
        onChanged();
      } else {
        rxInfoBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * RX meta-data set.
     * </pre>
     *
     * <code>repeated .gw.UplinkRxInfo rx_info = 3;</code>
     */
    public Builder setRxInfo(
        int index, UplinkRxInfo.Builder builderForValue) {
      if (rxInfoBuilder_ == null) {
        ensureRxInfoIsMutable();
        rxInfo_.set(index, builderForValue.build());
        onChanged();
      } else {
        rxInfoBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * RX meta-data set.
     * </pre>
     *
     * <code>repeated .gw.UplinkRxInfo rx_info = 3;</code>
     */
    public Builder addRxInfo(UplinkRxInfo value) {
      if (rxInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRxInfoIsMutable();
        rxInfo_.add(value);
        onChanged();
      } else {
        rxInfoBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * RX meta-data set.
     * </pre>
     *
     * <code>repeated .gw.UplinkRxInfo rx_info = 3;</code>
     */
    public Builder addRxInfo(
        int index, UplinkRxInfo value) {
      if (rxInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRxInfoIsMutable();
        rxInfo_.add(index, value);
        onChanged();
      } else {
        rxInfoBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * RX meta-data set.
     * </pre>
     *
     * <code>repeated .gw.UplinkRxInfo rx_info = 3;</code>
     */
    public Builder addRxInfo(
        UplinkRxInfo.Builder builderForValue) {
      if (rxInfoBuilder_ == null) {
        ensureRxInfoIsMutable();
        rxInfo_.add(builderForValue.build());
        onChanged();
      } else {
        rxInfoBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * RX meta-data set.
     * </pre>
     *
     * <code>repeated .gw.UplinkRxInfo rx_info = 3;</code>
     */
    public Builder addRxInfo(
        int index, UplinkRxInfo.Builder builderForValue) {
      if (rxInfoBuilder_ == null) {
        ensureRxInfoIsMutable();
        rxInfo_.add(index, builderForValue.build());
        onChanged();
      } else {
        rxInfoBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * RX meta-data set.
     * </pre>
     *
     * <code>repeated .gw.UplinkRxInfo rx_info = 3;</code>
     */
    public Builder addAllRxInfo(
        Iterable<? extends UplinkRxInfo> values) {
      if (rxInfoBuilder_ == null) {
        ensureRxInfoIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rxInfo_);
        onChanged();
      } else {
        rxInfoBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * RX meta-data set.
     * </pre>
     *
     * <code>repeated .gw.UplinkRxInfo rx_info = 3;</code>
     */
    public Builder clearRxInfo() {
      if (rxInfoBuilder_ == null) {
        rxInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        rxInfoBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * RX meta-data set.
     * </pre>
     *
     * <code>repeated .gw.UplinkRxInfo rx_info = 3;</code>
     */
    public Builder removeRxInfo(int index) {
      if (rxInfoBuilder_ == null) {
        ensureRxInfoIsMutable();
        rxInfo_.remove(index);
        onChanged();
      } else {
        rxInfoBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * RX meta-data set.
     * </pre>
     *
     * <code>repeated .gw.UplinkRxInfo rx_info = 3;</code>
     */
    public UplinkRxInfo.Builder getRxInfoBuilder(
        int index) {
      return getRxInfoFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * RX meta-data set.
     * </pre>
     *
     * <code>repeated .gw.UplinkRxInfo rx_info = 3;</code>
     */
    public UplinkRxInfoOrBuilder getRxInfoOrBuilder(
        int index) {
      if (rxInfoBuilder_ == null) {
        return rxInfo_.get(index);  } else {
        return rxInfoBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * RX meta-data set.
     * </pre>
     *
     * <code>repeated .gw.UplinkRxInfo rx_info = 3;</code>
     */
    public java.util.List<? extends UplinkRxInfoOrBuilder>
         getRxInfoOrBuilderList() {
      if (rxInfoBuilder_ != null) {
        return rxInfoBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(rxInfo_);
      }
    }
    /**
     * <pre>
     * RX meta-data set.
     * </pre>
     *
     * <code>repeated .gw.UplinkRxInfo rx_info = 3;</code>
     */
    public UplinkRxInfo.Builder addRxInfoBuilder() {
      return getRxInfoFieldBuilder().addBuilder(
          UplinkRxInfo.getDefaultInstance());
    }
    /**
     * <pre>
     * RX meta-data set.
     * </pre>
     *
     * <code>repeated .gw.UplinkRxInfo rx_info = 3;</code>
     */
    public UplinkRxInfo.Builder addRxInfoBuilder(
        int index) {
      return getRxInfoFieldBuilder().addBuilder(
          index, UplinkRxInfo.getDefaultInstance());
    }
    /**
     * <pre>
     * RX meta-data set.
     * </pre>
     *
     * <code>repeated .gw.UplinkRxInfo rx_info = 3;</code>
     */
    public java.util.List<UplinkRxInfo.Builder>
         getRxInfoBuilderList() {
      return getRxInfoFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        UplinkRxInfo, UplinkRxInfo.Builder, UplinkRxInfoOrBuilder>
        getRxInfoFieldBuilder() {
      if (rxInfoBuilder_ == null) {
        rxInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            UplinkRxInfo, UplinkRxInfo.Builder, UplinkRxInfoOrBuilder>(
                rxInfo_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        rxInfo_ = null;
      }
      return rxInfoBuilder_;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:gw.UplinkFrameSet)
  }

  // @@protoc_insertion_point(class_scope:gw.UplinkFrameSet)
  private static final UplinkFrameSet DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new UplinkFrameSet();
  }

  public static UplinkFrameSet getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<UplinkFrameSet>
      PARSER = new com.google.protobuf.AbstractParser<UplinkFrameSet>() {
    @Override
    public UplinkFrameSet parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<UplinkFrameSet> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<UplinkFrameSet> getParserForType() {
    return PARSER;
  }

  @Override
  public UplinkFrameSet getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

