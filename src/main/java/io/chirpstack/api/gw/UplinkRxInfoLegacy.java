// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gw/gw.proto

package io.chirpstack.api.gw;

/**
 * Protobuf type {@code gw.UplinkRxInfoLegacy}
 */
public final class UplinkRxInfoLegacy extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:gw.UplinkRxInfoLegacy)
    UplinkRxInfoLegacyOrBuilder {
private static final long serialVersionUID = 0L;
  // Use UplinkRxInfoLegacy.newBuilder() to construct.
  private UplinkRxInfoLegacy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private UplinkRxInfoLegacy() {
    gatewayId_ = com.google.protobuf.ByteString.EMPTY;
    fineTimestampType_ = 0;
    context_ = com.google.protobuf.ByteString.EMPTY;
    uplinkId_ = com.google.protobuf.ByteString.EMPTY;
    crcStatus_ = 0;
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new UplinkRxInfoLegacy();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return GatewayProto.internal_static_gw_UplinkRxInfoLegacy_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 18:
        return internalGetMetadata();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return GatewayProto.internal_static_gw_UplinkRxInfoLegacy_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            UplinkRxInfoLegacy.class, Builder.class);
  }

  private int fineTimestampCase_ = 0;
  private Object fineTimestamp_;
  public enum FineTimestampCase
      implements com.google.protobuf.Internal.EnumLite,
          InternalOneOfEnum {
    ENCRYPTED_FINE_TIMESTAMP(13),
    PLAIN_FINE_TIMESTAMP(14),
    FINETIMESTAMP_NOT_SET(0);
    private final int value;
    private FineTimestampCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static FineTimestampCase valueOf(int value) {
      return forNumber(value);
    }

    public static FineTimestampCase forNumber(int value) {
      switch (value) {
        case 13: return ENCRYPTED_FINE_TIMESTAMP;
        case 14: return PLAIN_FINE_TIMESTAMP;
        case 0: return FINETIMESTAMP_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public FineTimestampCase
  getFineTimestampCase() {
    return FineTimestampCase.forNumber(
        fineTimestampCase_);
  }

  public static final int GATEWAY_ID_FIELD_NUMBER = 1;
  private com.google.protobuf.ByteString gatewayId_;
  /**
   * <pre>
   * Gateway ID.
   * </pre>
   *
   * <code>bytes gateway_id = 1;</code>
   * @return The gatewayId.
   */
  @Override
  public com.google.protobuf.ByteString getGatewayId() {
    return gatewayId_;
  }

  public static final int TIME_FIELD_NUMBER = 2;
  private com.google.protobuf.Timestamp time_;
  /**
   * <pre>
   * RX time (only set when the gateway has a GPS module).
   * </pre>
   *
   * <code>.google.protobuf.Timestamp time = 2;</code>
   * @return Whether the time field is set.
   */
  @Override
  public boolean hasTime() {
    return time_ != null;
  }
  /**
   * <pre>
   * RX time (only set when the gateway has a GPS module).
   * </pre>
   *
   * <code>.google.protobuf.Timestamp time = 2;</code>
   * @return The time.
   */
  @Override
  public com.google.protobuf.Timestamp getTime() {
    return time_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : time_;
  }
  /**
   * <pre>
   * RX time (only set when the gateway has a GPS module).
   * </pre>
   *
   * <code>.google.protobuf.Timestamp time = 2;</code>
   */
  @Override
  public com.google.protobuf.TimestampOrBuilder getTimeOrBuilder() {
    return getTime();
  }

  public static final int TIME_SINCE_GPS_EPOCH_FIELD_NUMBER = 3;
  private com.google.protobuf.Duration timeSinceGpsEpoch_;
  /**
   * <pre>
   * RX time since GPS epoch (only set when the gateway has a GPS module).
   * </pre>
   *
   * <code>.google.protobuf.Duration time_since_gps_epoch = 3;</code>
   * @return Whether the timeSinceGpsEpoch field is set.
   */
  @Override
  public boolean hasTimeSinceGpsEpoch() {
    return timeSinceGpsEpoch_ != null;
  }
  /**
   * <pre>
   * RX time since GPS epoch (only set when the gateway has a GPS module).
   * </pre>
   *
   * <code>.google.protobuf.Duration time_since_gps_epoch = 3;</code>
   * @return The timeSinceGpsEpoch.
   */
  @Override
  public com.google.protobuf.Duration getTimeSinceGpsEpoch() {
    return timeSinceGpsEpoch_ == null ? com.google.protobuf.Duration.getDefaultInstance() : timeSinceGpsEpoch_;
  }
  /**
   * <pre>
   * RX time since GPS epoch (only set when the gateway has a GPS module).
   * </pre>
   *
   * <code>.google.protobuf.Duration time_since_gps_epoch = 3;</code>
   */
  @Override
  public com.google.protobuf.DurationOrBuilder getTimeSinceGpsEpochOrBuilder() {
    return getTimeSinceGpsEpoch();
  }

  public static final int RSSI_FIELD_NUMBER = 5;
  private int rssi_;
  /**
   * <pre>
   * RSSI.
   * </pre>
   *
   * <code>int32 rssi = 5;</code>
   * @return The rssi.
   */
  @Override
  public int getRssi() {
    return rssi_;
  }

  public static final int LORA_SNR_FIELD_NUMBER = 6;
  private double loraSnr_;
  /**
   * <pre>
   * LoRa SNR.
   * </pre>
   *
   * <code>double lora_snr = 6;</code>
   * @return The loraSnr.
   */
  @Override
  public double getLoraSnr() {
    return loraSnr_;
  }

  public static final int CHANNEL_FIELD_NUMBER = 7;
  private int channel_;
  /**
   * <pre>
   * Channel.
   * </pre>
   *
   * <code>uint32 channel = 7;</code>
   * @return The channel.
   */
  @Override
  public int getChannel() {
    return channel_;
  }

  public static final int RF_CHAIN_FIELD_NUMBER = 8;
  private int rfChain_;
  /**
   * <pre>
   * RF Chain.
   * </pre>
   *
   * <code>uint32 rf_chain = 8;</code>
   * @return The rfChain.
   */
  @Override
  public int getRfChain() {
    return rfChain_;
  }

  public static final int BOARD_FIELD_NUMBER = 9;
  private int board_;
  /**
   * <pre>
   * Board.
   * </pre>
   *
   * <code>uint32 board = 9;</code>
   * @return The board.
   */
  @Override
  public int getBoard() {
    return board_;
  }

  public static final int ANTENNA_FIELD_NUMBER = 10;
  private int antenna_;
  /**
   * <pre>
   * Antenna.
   * </pre>
   *
   * <code>uint32 antenna = 10;</code>
   * @return The antenna.
   */
  @Override
  public int getAntenna() {
    return antenna_;
  }

  public static final int LOCATION_FIELD_NUMBER = 11;
  private io.chirpstack.api.Location location_;
  /**
   * <pre>
   * Location.
   * </pre>
   *
   * <code>.common.Location location = 11;</code>
   * @return Whether the location field is set.
   */
  @Override
  public boolean hasLocation() {
    return location_ != null;
  }
  /**
   * <pre>
   * Location.
   * </pre>
   *
   * <code>.common.Location location = 11;</code>
   * @return The location.
   */
  @Override
  public io.chirpstack.api.Location getLocation() {
    return location_ == null ? io.chirpstack.api.Location.getDefaultInstance() : location_;
  }
  /**
   * <pre>
   * Location.
   * </pre>
   *
   * <code>.common.Location location = 11;</code>
   */
  @Override
  public io.chirpstack.api.LocationOrBuilder getLocationOrBuilder() {
    return getLocation();
  }

  public static final int FINE_TIMESTAMP_TYPE_FIELD_NUMBER = 12;
  private int fineTimestampType_;
  /**
   * <pre>
   * Fine-timestamp type.
   * </pre>
   *
   * <code>.gw.FineTimestampType fine_timestamp_type = 12;</code>
   * @return The enum numeric value on the wire for fineTimestampType.
   */
  @Override public int getFineTimestampTypeValue() {
    return fineTimestampType_;
  }
  /**
   * <pre>
   * Fine-timestamp type.
   * </pre>
   *
   * <code>.gw.FineTimestampType fine_timestamp_type = 12;</code>
   * @return The fineTimestampType.
   */
  @Override public FineTimestampType getFineTimestampType() {
    @SuppressWarnings("deprecation")
    FineTimestampType result = FineTimestampType.valueOf(fineTimestampType_);
    return result == null ? FineTimestampType.UNRECOGNIZED : result;
  }

  public static final int ENCRYPTED_FINE_TIMESTAMP_FIELD_NUMBER = 13;
  /**
   * <pre>
   * Encrypted fine-timestamp data.
   * </pre>
   *
   * <code>.gw.EncryptedFineTimestamp encrypted_fine_timestamp = 13;</code>
   * @return Whether the encryptedFineTimestamp field is set.
   */
  @Override
  public boolean hasEncryptedFineTimestamp() {
    return fineTimestampCase_ == 13;
  }
  /**
   * <pre>
   * Encrypted fine-timestamp data.
   * </pre>
   *
   * <code>.gw.EncryptedFineTimestamp encrypted_fine_timestamp = 13;</code>
   * @return The encryptedFineTimestamp.
   */
  @Override
  public EncryptedFineTimestamp getEncryptedFineTimestamp() {
    if (fineTimestampCase_ == 13) {
       return (EncryptedFineTimestamp) fineTimestamp_;
    }
    return EncryptedFineTimestamp.getDefaultInstance();
  }
  /**
   * <pre>
   * Encrypted fine-timestamp data.
   * </pre>
   *
   * <code>.gw.EncryptedFineTimestamp encrypted_fine_timestamp = 13;</code>
   */
  @Override
  public EncryptedFineTimestampOrBuilder getEncryptedFineTimestampOrBuilder() {
    if (fineTimestampCase_ == 13) {
       return (EncryptedFineTimestamp) fineTimestamp_;
    }
    return EncryptedFineTimestamp.getDefaultInstance();
  }

  public static final int PLAIN_FINE_TIMESTAMP_FIELD_NUMBER = 14;
  /**
   * <pre>
   * Plain fine-timestamp data.
   * </pre>
   *
   * <code>.gw.PlainFineTimestamp plain_fine_timestamp = 14;</code>
   * @return Whether the plainFineTimestamp field is set.
   */
  @Override
  public boolean hasPlainFineTimestamp() {
    return fineTimestampCase_ == 14;
  }
  /**
   * <pre>
   * Plain fine-timestamp data.
   * </pre>
   *
   * <code>.gw.PlainFineTimestamp plain_fine_timestamp = 14;</code>
   * @return The plainFineTimestamp.
   */
  @Override
  public PlainFineTimestamp getPlainFineTimestamp() {
    if (fineTimestampCase_ == 14) {
       return (PlainFineTimestamp) fineTimestamp_;
    }
    return PlainFineTimestamp.getDefaultInstance();
  }
  /**
   * <pre>
   * Plain fine-timestamp data.
   * </pre>
   *
   * <code>.gw.PlainFineTimestamp plain_fine_timestamp = 14;</code>
   */
  @Override
  public PlainFineTimestampOrBuilder getPlainFineTimestampOrBuilder() {
    if (fineTimestampCase_ == 14) {
       return (PlainFineTimestamp) fineTimestamp_;
    }
    return PlainFineTimestamp.getDefaultInstance();
  }

  public static final int CONTEXT_FIELD_NUMBER = 15;
  private com.google.protobuf.ByteString context_;
  /**
   * <pre>
   * Gateway specific context.
   * </pre>
   *
   * <code>bytes context = 15;</code>
   * @return The context.
   */
  @Override
  public com.google.protobuf.ByteString getContext() {
    return context_;
  }

  public static final int UPLINK_ID_FIELD_NUMBER = 16;
  private com.google.protobuf.ByteString uplinkId_;
  /**
   * <pre>
   * Uplink ID (UUID bytes).
   * Unique and random ID which can be used to correlate the uplink across multiple logs.
   * </pre>
   *
   * <code>bytes uplink_id = 16;</code>
   * @return The uplinkId.
   */
  @Override
  public com.google.protobuf.ByteString getUplinkId() {
    return uplinkId_;
  }

  public static final int CRC_STATUS_FIELD_NUMBER = 17;
  private int crcStatus_;
  /**
   * <pre>
   * CRC status.
   * </pre>
   *
   * <code>.gw.CRCStatus crc_status = 17;</code>
   * @return The enum numeric value on the wire for crcStatus.
   */
  @Override public int getCrcStatusValue() {
    return crcStatus_;
  }
  /**
   * <pre>
   * CRC status.
   * </pre>
   *
   * <code>.gw.CRCStatus crc_status = 17;</code>
   * @return The crcStatus.
   */
  @Override public CRCStatus getCrcStatus() {
    @SuppressWarnings("deprecation")
    CRCStatus result = CRCStatus.valueOf(crcStatus_);
    return result == null ? CRCStatus.UNRECOGNIZED : result;
  }

  public static final int METADATA_FIELD_NUMBER = 18;
  private static final class MetadataDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        String, String> defaultEntry =
            com.google.protobuf.MapEntry
            .<String, String>newDefaultInstance(
                GatewayProto.internal_static_gw_UplinkRxInfoLegacy_MetadataEntry_descriptor,
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapField<
      String, String> metadata_;
  private com.google.protobuf.MapField<String, String>
  internalGetMetadata() {
    if (metadata_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          MetadataDefaultEntryHolder.defaultEntry);
    }
    return metadata_;
  }

  public int getMetadataCount() {
    return internalGetMetadata().getMap().size();
  }
  /**
   * <pre>
   * Optional meta-data map.
   * </pre>
   *
   * <code>map&lt;string, string&gt; metadata = 18;</code>
   */

  @Override
  public boolean containsMetadata(
      String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetMetadata().getMap().containsKey(key);
  }
  /**
   * Use {@link #getMetadataMap()} instead.
   */
  @Override
  @Deprecated
  public java.util.Map<String, String> getMetadata() {
    return getMetadataMap();
  }
  /**
   * <pre>
   * Optional meta-data map.
   * </pre>
   *
   * <code>map&lt;string, string&gt; metadata = 18;</code>
   */
  @Override

  public java.util.Map<String, String> getMetadataMap() {
    return internalGetMetadata().getMap();
  }
  /**
   * <pre>
   * Optional meta-data map.
   * </pre>
   *
   * <code>map&lt;string, string&gt; metadata = 18;</code>
   */
  @Override

  public String getMetadataOrDefault(
      String key,
      String defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<String, String> map =
        internalGetMetadata().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Optional meta-data map.
   * </pre>
   *
   * <code>map&lt;string, string&gt; metadata = 18;</code>
   */
  @Override

  public String getMetadataOrThrow(
      String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<String, String> map =
        internalGetMetadata().getMap();
    if (!map.containsKey(key)) {
      throw new IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!gatewayId_.isEmpty()) {
      output.writeBytes(1, gatewayId_);
    }
    if (time_ != null) {
      output.writeMessage(2, getTime());
    }
    if (timeSinceGpsEpoch_ != null) {
      output.writeMessage(3, getTimeSinceGpsEpoch());
    }
    if (rssi_ != 0) {
      output.writeInt32(5, rssi_);
    }
    if (Double.doubleToRawLongBits(loraSnr_) != 0) {
      output.writeDouble(6, loraSnr_);
    }
    if (channel_ != 0) {
      output.writeUInt32(7, channel_);
    }
    if (rfChain_ != 0) {
      output.writeUInt32(8, rfChain_);
    }
    if (board_ != 0) {
      output.writeUInt32(9, board_);
    }
    if (antenna_ != 0) {
      output.writeUInt32(10, antenna_);
    }
    if (location_ != null) {
      output.writeMessage(11, getLocation());
    }
    if (fineTimestampType_ != FineTimestampType.NONE.getNumber()) {
      output.writeEnum(12, fineTimestampType_);
    }
    if (fineTimestampCase_ == 13) {
      output.writeMessage(13, (EncryptedFineTimestamp) fineTimestamp_);
    }
    if (fineTimestampCase_ == 14) {
      output.writeMessage(14, (PlainFineTimestamp) fineTimestamp_);
    }
    if (!context_.isEmpty()) {
      output.writeBytes(15, context_);
    }
    if (!uplinkId_.isEmpty()) {
      output.writeBytes(16, uplinkId_);
    }
    if (crcStatus_ != CRCStatus.NO_CRC.getNumber()) {
      output.writeEnum(17, crcStatus_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetMetadata(),
        MetadataDefaultEntryHolder.defaultEntry,
        18);
    getUnknownFields().writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!gatewayId_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(1, gatewayId_);
    }
    if (time_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getTime());
    }
    if (timeSinceGpsEpoch_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getTimeSinceGpsEpoch());
    }
    if (rssi_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, rssi_);
    }
    if (Double.doubleToRawLongBits(loraSnr_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(6, loraSnr_);
    }
    if (channel_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(7, channel_);
    }
    if (rfChain_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(8, rfChain_);
    }
    if (board_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(9, board_);
    }
    if (antenna_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(10, antenna_);
    }
    if (location_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, getLocation());
    }
    if (fineTimestampType_ != FineTimestampType.NONE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(12, fineTimestampType_);
    }
    if (fineTimestampCase_ == 13) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, (EncryptedFineTimestamp) fineTimestamp_);
    }
    if (fineTimestampCase_ == 14) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(14, (PlainFineTimestamp) fineTimestamp_);
    }
    if (!context_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(15, context_);
    }
    if (!uplinkId_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(16, uplinkId_);
    }
    if (crcStatus_ != CRCStatus.NO_CRC.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(17, crcStatus_);
    }
    for (java.util.Map.Entry<String, String> entry
         : internalGetMetadata().getMap().entrySet()) {
      com.google.protobuf.MapEntry<String, String>
      metadata__ = MetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, metadata__);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof UplinkRxInfoLegacy)) {
      return super.equals(obj);
    }
    UplinkRxInfoLegacy other = (UplinkRxInfoLegacy) obj;

    if (!getGatewayId()
        .equals(other.getGatewayId())) return false;
    if (hasTime() != other.hasTime()) return false;
    if (hasTime()) {
      if (!getTime()
          .equals(other.getTime())) return false;
    }
    if (hasTimeSinceGpsEpoch() != other.hasTimeSinceGpsEpoch()) return false;
    if (hasTimeSinceGpsEpoch()) {
      if (!getTimeSinceGpsEpoch()
          .equals(other.getTimeSinceGpsEpoch())) return false;
    }
    if (getRssi()
        != other.getRssi()) return false;
    if (Double.doubleToLongBits(getLoraSnr())
        != Double.doubleToLongBits(
            other.getLoraSnr())) return false;
    if (getChannel()
        != other.getChannel()) return false;
    if (getRfChain()
        != other.getRfChain()) return false;
    if (getBoard()
        != other.getBoard()) return false;
    if (getAntenna()
        != other.getAntenna()) return false;
    if (hasLocation() != other.hasLocation()) return false;
    if (hasLocation()) {
      if (!getLocation()
          .equals(other.getLocation())) return false;
    }
    if (fineTimestampType_ != other.fineTimestampType_) return false;
    if (!getContext()
        .equals(other.getContext())) return false;
    if (!getUplinkId()
        .equals(other.getUplinkId())) return false;
    if (crcStatus_ != other.crcStatus_) return false;
    if (!internalGetMetadata().equals(
        other.internalGetMetadata())) return false;
    if (!getFineTimestampCase().equals(other.getFineTimestampCase())) return false;
    switch (fineTimestampCase_) {
      case 13:
        if (!getEncryptedFineTimestamp()
            .equals(other.getEncryptedFineTimestamp())) return false;
        break;
      case 14:
        if (!getPlainFineTimestamp()
            .equals(other.getPlainFineTimestamp())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + GATEWAY_ID_FIELD_NUMBER;
    hash = (53 * hash) + getGatewayId().hashCode();
    if (hasTime()) {
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + getTime().hashCode();
    }
    if (hasTimeSinceGpsEpoch()) {
      hash = (37 * hash) + TIME_SINCE_GPS_EPOCH_FIELD_NUMBER;
      hash = (53 * hash) + getTimeSinceGpsEpoch().hashCode();
    }
    hash = (37 * hash) + RSSI_FIELD_NUMBER;
    hash = (53 * hash) + getRssi();
    hash = (37 * hash) + LORA_SNR_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        Double.doubleToLongBits(getLoraSnr()));
    hash = (37 * hash) + CHANNEL_FIELD_NUMBER;
    hash = (53 * hash) + getChannel();
    hash = (37 * hash) + RF_CHAIN_FIELD_NUMBER;
    hash = (53 * hash) + getRfChain();
    hash = (37 * hash) + BOARD_FIELD_NUMBER;
    hash = (53 * hash) + getBoard();
    hash = (37 * hash) + ANTENNA_FIELD_NUMBER;
    hash = (53 * hash) + getAntenna();
    if (hasLocation()) {
      hash = (37 * hash) + LOCATION_FIELD_NUMBER;
      hash = (53 * hash) + getLocation().hashCode();
    }
    hash = (37 * hash) + FINE_TIMESTAMP_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + fineTimestampType_;
    hash = (37 * hash) + CONTEXT_FIELD_NUMBER;
    hash = (53 * hash) + getContext().hashCode();
    hash = (37 * hash) + UPLINK_ID_FIELD_NUMBER;
    hash = (53 * hash) + getUplinkId().hashCode();
    hash = (37 * hash) + CRC_STATUS_FIELD_NUMBER;
    hash = (53 * hash) + crcStatus_;
    if (!internalGetMetadata().getMap().isEmpty()) {
      hash = (37 * hash) + METADATA_FIELD_NUMBER;
      hash = (53 * hash) + internalGetMetadata().hashCode();
    }
    switch (fineTimestampCase_) {
      case 13:
        hash = (37 * hash) + ENCRYPTED_FINE_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + getEncryptedFineTimestamp().hashCode();
        break;
      case 14:
        hash = (37 * hash) + PLAIN_FINE_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + getPlainFineTimestamp().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static UplinkRxInfoLegacy parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static UplinkRxInfoLegacy parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static UplinkRxInfoLegacy parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static UplinkRxInfoLegacy parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static UplinkRxInfoLegacy parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static UplinkRxInfoLegacy parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static UplinkRxInfoLegacy parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static UplinkRxInfoLegacy parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static UplinkRxInfoLegacy parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static UplinkRxInfoLegacy parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static UplinkRxInfoLegacy parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static UplinkRxInfoLegacy parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(UplinkRxInfoLegacy prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code gw.UplinkRxInfoLegacy}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:gw.UplinkRxInfoLegacy)
      UplinkRxInfoLegacyOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GatewayProto.internal_static_gw_UplinkRxInfoLegacy_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 18:
          return internalGetMetadata();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 18:
          return internalGetMutableMetadata();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GatewayProto.internal_static_gw_UplinkRxInfoLegacy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              UplinkRxInfoLegacy.class, Builder.class);
    }

    // Construct using io.chirpstack.api.gw.UplinkRxInfoLegacy.newBuilder()
    private Builder() {

    }

    private Builder(
        BuilderParent parent) {
      super(parent);

    }
    @Override
    public Builder clear() {
      super.clear();
      gatewayId_ = com.google.protobuf.ByteString.EMPTY;

      if (timeBuilder_ == null) {
        time_ = null;
      } else {
        time_ = null;
        timeBuilder_ = null;
      }
      if (timeSinceGpsEpochBuilder_ == null) {
        timeSinceGpsEpoch_ = null;
      } else {
        timeSinceGpsEpoch_ = null;
        timeSinceGpsEpochBuilder_ = null;
      }
      rssi_ = 0;

      loraSnr_ = 0D;

      channel_ = 0;

      rfChain_ = 0;

      board_ = 0;

      antenna_ = 0;

      if (locationBuilder_ == null) {
        location_ = null;
      } else {
        location_ = null;
        locationBuilder_ = null;
      }
      fineTimestampType_ = 0;

      if (encryptedFineTimestampBuilder_ != null) {
        encryptedFineTimestampBuilder_.clear();
      }
      if (plainFineTimestampBuilder_ != null) {
        plainFineTimestampBuilder_.clear();
      }
      context_ = com.google.protobuf.ByteString.EMPTY;

      uplinkId_ = com.google.protobuf.ByteString.EMPTY;

      crcStatus_ = 0;

      internalGetMutableMetadata().clear();
      fineTimestampCase_ = 0;
      fineTimestamp_ = null;
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return GatewayProto.internal_static_gw_UplinkRxInfoLegacy_descriptor;
    }

    @Override
    public UplinkRxInfoLegacy getDefaultInstanceForType() {
      return UplinkRxInfoLegacy.getDefaultInstance();
    }

    @Override
    public UplinkRxInfoLegacy build() {
      UplinkRxInfoLegacy result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public UplinkRxInfoLegacy buildPartial() {
      UplinkRxInfoLegacy result = new UplinkRxInfoLegacy(this);
      int from_bitField0_ = bitField0_;
      result.gatewayId_ = gatewayId_;
      if (timeBuilder_ == null) {
        result.time_ = time_;
      } else {
        result.time_ = timeBuilder_.build();
      }
      if (timeSinceGpsEpochBuilder_ == null) {
        result.timeSinceGpsEpoch_ = timeSinceGpsEpoch_;
      } else {
        result.timeSinceGpsEpoch_ = timeSinceGpsEpochBuilder_.build();
      }
      result.rssi_ = rssi_;
      result.loraSnr_ = loraSnr_;
      result.channel_ = channel_;
      result.rfChain_ = rfChain_;
      result.board_ = board_;
      result.antenna_ = antenna_;
      if (locationBuilder_ == null) {
        result.location_ = location_;
      } else {
        result.location_ = locationBuilder_.build();
      }
      result.fineTimestampType_ = fineTimestampType_;
      if (fineTimestampCase_ == 13) {
        if (encryptedFineTimestampBuilder_ == null) {
          result.fineTimestamp_ = fineTimestamp_;
        } else {
          result.fineTimestamp_ = encryptedFineTimestampBuilder_.build();
        }
      }
      if (fineTimestampCase_ == 14) {
        if (plainFineTimestampBuilder_ == null) {
          result.fineTimestamp_ = fineTimestamp_;
        } else {
          result.fineTimestamp_ = plainFineTimestampBuilder_.build();
        }
      }
      result.context_ = context_;
      result.uplinkId_ = uplinkId_;
      result.crcStatus_ = crcStatus_;
      result.metadata_ = internalGetMetadata();
      result.metadata_.makeImmutable();
      result.fineTimestampCase_ = fineTimestampCase_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof UplinkRxInfoLegacy) {
        return mergeFrom((UplinkRxInfoLegacy)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(UplinkRxInfoLegacy other) {
      if (other == UplinkRxInfoLegacy.getDefaultInstance()) return this;
      if (other.getGatewayId() != com.google.protobuf.ByteString.EMPTY) {
        setGatewayId(other.getGatewayId());
      }
      if (other.hasTime()) {
        mergeTime(other.getTime());
      }
      if (other.hasTimeSinceGpsEpoch()) {
        mergeTimeSinceGpsEpoch(other.getTimeSinceGpsEpoch());
      }
      if (other.getRssi() != 0) {
        setRssi(other.getRssi());
      }
      if (other.getLoraSnr() != 0D) {
        setLoraSnr(other.getLoraSnr());
      }
      if (other.getChannel() != 0) {
        setChannel(other.getChannel());
      }
      if (other.getRfChain() != 0) {
        setRfChain(other.getRfChain());
      }
      if (other.getBoard() != 0) {
        setBoard(other.getBoard());
      }
      if (other.getAntenna() != 0) {
        setAntenna(other.getAntenna());
      }
      if (other.hasLocation()) {
        mergeLocation(other.getLocation());
      }
      if (other.fineTimestampType_ != 0) {
        setFineTimestampTypeValue(other.getFineTimestampTypeValue());
      }
      if (other.getContext() != com.google.protobuf.ByteString.EMPTY) {
        setContext(other.getContext());
      }
      if (other.getUplinkId() != com.google.protobuf.ByteString.EMPTY) {
        setUplinkId(other.getUplinkId());
      }
      if (other.crcStatus_ != 0) {
        setCrcStatusValue(other.getCrcStatusValue());
      }
      internalGetMutableMetadata().mergeFrom(
          other.internalGetMetadata());
      switch (other.getFineTimestampCase()) {
        case ENCRYPTED_FINE_TIMESTAMP: {
          mergeEncryptedFineTimestamp(other.getEncryptedFineTimestamp());
          break;
        }
        case PLAIN_FINE_TIMESTAMP: {
          mergePlainFineTimestamp(other.getPlainFineTimestamp());
          break;
        }
        case FINETIMESTAMP_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              gatewayId_ = input.readBytes();

              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getTimeFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getTimeSinceGpsEpochFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 26
            case 40: {
              rssi_ = input.readInt32();

              break;
            } // case 40
            case 49: {
              loraSnr_ = input.readDouble();

              break;
            } // case 49
            case 56: {
              channel_ = input.readUInt32();

              break;
            } // case 56
            case 64: {
              rfChain_ = input.readUInt32();

              break;
            } // case 64
            case 72: {
              board_ = input.readUInt32();

              break;
            } // case 72
            case 80: {
              antenna_ = input.readUInt32();

              break;
            } // case 80
            case 90: {
              input.readMessage(
                  getLocationFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 90
            case 96: {
              fineTimestampType_ = input.readEnum();

              break;
            } // case 96
            case 106: {
              input.readMessage(
                  getEncryptedFineTimestampFieldBuilder().getBuilder(),
                  extensionRegistry);
              fineTimestampCase_ = 13;
              break;
            } // case 106
            case 114: {
              input.readMessage(
                  getPlainFineTimestampFieldBuilder().getBuilder(),
                  extensionRegistry);
              fineTimestampCase_ = 14;
              break;
            } // case 114
            case 122: {
              context_ = input.readBytes();

              break;
            } // case 122
            case 130: {
              uplinkId_ = input.readBytes();

              break;
            } // case 130
            case 136: {
              crcStatus_ = input.readEnum();

              break;
            } // case 136
            case 146: {
              com.google.protobuf.MapEntry<String, String>
              metadata__ = input.readMessage(
                  MetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableMetadata().getMutableMap().put(
                  metadata__.getKey(), metadata__.getValue());
              break;
            } // case 146
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int fineTimestampCase_ = 0;
    private Object fineTimestamp_;
    public FineTimestampCase
        getFineTimestampCase() {
      return FineTimestampCase.forNumber(
          fineTimestampCase_);
    }

    public Builder clearFineTimestamp() {
      fineTimestampCase_ = 0;
      fineTimestamp_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.ByteString gatewayId_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * Gateway ID.
     * </pre>
     *
     * <code>bytes gateway_id = 1;</code>
     * @return The gatewayId.
     */
    @Override
    public com.google.protobuf.ByteString getGatewayId() {
      return gatewayId_;
    }
    /**
     * <pre>
     * Gateway ID.
     * </pre>
     *
     * <code>bytes gateway_id = 1;</code>
     * @param value The gatewayId to set.
     * @return This builder for chaining.
     */
    public Builder setGatewayId(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      gatewayId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Gateway ID.
     * </pre>
     *
     * <code>bytes gateway_id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearGatewayId() {
      
      gatewayId_ = getDefaultInstance().getGatewayId();
      onChanged();
      return this;
    }

    private com.google.protobuf.Timestamp time_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> timeBuilder_;
    /**
     * <pre>
     * RX time (only set when the gateway has a GPS module).
     * </pre>
     *
     * <code>.google.protobuf.Timestamp time = 2;</code>
     * @return Whether the time field is set.
     */
    public boolean hasTime() {
      return timeBuilder_ != null || time_ != null;
    }
    /**
     * <pre>
     * RX time (only set when the gateway has a GPS module).
     * </pre>
     *
     * <code>.google.protobuf.Timestamp time = 2;</code>
     * @return The time.
     */
    public com.google.protobuf.Timestamp getTime() {
      if (timeBuilder_ == null) {
        return time_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : time_;
      } else {
        return timeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * RX time (only set when the gateway has a GPS module).
     * </pre>
     *
     * <code>.google.protobuf.Timestamp time = 2;</code>
     */
    public Builder setTime(com.google.protobuf.Timestamp value) {
      if (timeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        time_ = value;
        onChanged();
      } else {
        timeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * RX time (only set when the gateway has a GPS module).
     * </pre>
     *
     * <code>.google.protobuf.Timestamp time = 2;</code>
     */
    public Builder setTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (timeBuilder_ == null) {
        time_ = builderForValue.build();
        onChanged();
      } else {
        timeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * RX time (only set when the gateway has a GPS module).
     * </pre>
     *
     * <code>.google.protobuf.Timestamp time = 2;</code>
     */
    public Builder mergeTime(com.google.protobuf.Timestamp value) {
      if (timeBuilder_ == null) {
        if (time_ != null) {
          time_ =
            com.google.protobuf.Timestamp.newBuilder(time_).mergeFrom(value).buildPartial();
        } else {
          time_ = value;
        }
        onChanged();
      } else {
        timeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * RX time (only set when the gateway has a GPS module).
     * </pre>
     *
     * <code>.google.protobuf.Timestamp time = 2;</code>
     */
    public Builder clearTime() {
      if (timeBuilder_ == null) {
        time_ = null;
        onChanged();
      } else {
        time_ = null;
        timeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * RX time (only set when the gateway has a GPS module).
     * </pre>
     *
     * <code>.google.protobuf.Timestamp time = 2;</code>
     */
    public com.google.protobuf.Timestamp.Builder getTimeBuilder() {
      
      onChanged();
      return getTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * RX time (only set when the gateway has a GPS module).
     * </pre>
     *
     * <code>.google.protobuf.Timestamp time = 2;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getTimeOrBuilder() {
      if (timeBuilder_ != null) {
        return timeBuilder_.getMessageOrBuilder();
      } else {
        return time_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : time_;
      }
    }
    /**
     * <pre>
     * RX time (only set when the gateway has a GPS module).
     * </pre>
     *
     * <code>.google.protobuf.Timestamp time = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getTimeFieldBuilder() {
      if (timeBuilder_ == null) {
        timeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getTime(),
                getParentForChildren(),
                isClean());
        time_ = null;
      }
      return timeBuilder_;
    }

    private com.google.protobuf.Duration timeSinceGpsEpoch_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> timeSinceGpsEpochBuilder_;
    /**
     * <pre>
     * RX time since GPS epoch (only set when the gateway has a GPS module).
     * </pre>
     *
     * <code>.google.protobuf.Duration time_since_gps_epoch = 3;</code>
     * @return Whether the timeSinceGpsEpoch field is set.
     */
    public boolean hasTimeSinceGpsEpoch() {
      return timeSinceGpsEpochBuilder_ != null || timeSinceGpsEpoch_ != null;
    }
    /**
     * <pre>
     * RX time since GPS epoch (only set when the gateway has a GPS module).
     * </pre>
     *
     * <code>.google.protobuf.Duration time_since_gps_epoch = 3;</code>
     * @return The timeSinceGpsEpoch.
     */
    public com.google.protobuf.Duration getTimeSinceGpsEpoch() {
      if (timeSinceGpsEpochBuilder_ == null) {
        return timeSinceGpsEpoch_ == null ? com.google.protobuf.Duration.getDefaultInstance() : timeSinceGpsEpoch_;
      } else {
        return timeSinceGpsEpochBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * RX time since GPS epoch (only set when the gateway has a GPS module).
     * </pre>
     *
     * <code>.google.protobuf.Duration time_since_gps_epoch = 3;</code>
     */
    public Builder setTimeSinceGpsEpoch(com.google.protobuf.Duration value) {
      if (timeSinceGpsEpochBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        timeSinceGpsEpoch_ = value;
        onChanged();
      } else {
        timeSinceGpsEpochBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * RX time since GPS epoch (only set when the gateway has a GPS module).
     * </pre>
     *
     * <code>.google.protobuf.Duration time_since_gps_epoch = 3;</code>
     */
    public Builder setTimeSinceGpsEpoch(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (timeSinceGpsEpochBuilder_ == null) {
        timeSinceGpsEpoch_ = builderForValue.build();
        onChanged();
      } else {
        timeSinceGpsEpochBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * RX time since GPS epoch (only set when the gateway has a GPS module).
     * </pre>
     *
     * <code>.google.protobuf.Duration time_since_gps_epoch = 3;</code>
     */
    public Builder mergeTimeSinceGpsEpoch(com.google.protobuf.Duration value) {
      if (timeSinceGpsEpochBuilder_ == null) {
        if (timeSinceGpsEpoch_ != null) {
          timeSinceGpsEpoch_ =
            com.google.protobuf.Duration.newBuilder(timeSinceGpsEpoch_).mergeFrom(value).buildPartial();
        } else {
          timeSinceGpsEpoch_ = value;
        }
        onChanged();
      } else {
        timeSinceGpsEpochBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * RX time since GPS epoch (only set when the gateway has a GPS module).
     * </pre>
     *
     * <code>.google.protobuf.Duration time_since_gps_epoch = 3;</code>
     */
    public Builder clearTimeSinceGpsEpoch() {
      if (timeSinceGpsEpochBuilder_ == null) {
        timeSinceGpsEpoch_ = null;
        onChanged();
      } else {
        timeSinceGpsEpoch_ = null;
        timeSinceGpsEpochBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * RX time since GPS epoch (only set when the gateway has a GPS module).
     * </pre>
     *
     * <code>.google.protobuf.Duration time_since_gps_epoch = 3;</code>
     */
    public com.google.protobuf.Duration.Builder getTimeSinceGpsEpochBuilder() {
      
      onChanged();
      return getTimeSinceGpsEpochFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * RX time since GPS epoch (only set when the gateway has a GPS module).
     * </pre>
     *
     * <code>.google.protobuf.Duration time_since_gps_epoch = 3;</code>
     */
    public com.google.protobuf.DurationOrBuilder getTimeSinceGpsEpochOrBuilder() {
      if (timeSinceGpsEpochBuilder_ != null) {
        return timeSinceGpsEpochBuilder_.getMessageOrBuilder();
      } else {
        return timeSinceGpsEpoch_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : timeSinceGpsEpoch_;
      }
    }
    /**
     * <pre>
     * RX time since GPS epoch (only set when the gateway has a GPS module).
     * </pre>
     *
     * <code>.google.protobuf.Duration time_since_gps_epoch = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getTimeSinceGpsEpochFieldBuilder() {
      if (timeSinceGpsEpochBuilder_ == null) {
        timeSinceGpsEpochBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getTimeSinceGpsEpoch(),
                getParentForChildren(),
                isClean());
        timeSinceGpsEpoch_ = null;
      }
      return timeSinceGpsEpochBuilder_;
    }

    private int rssi_ ;
    /**
     * <pre>
     * RSSI.
     * </pre>
     *
     * <code>int32 rssi = 5;</code>
     * @return The rssi.
     */
    @Override
    public int getRssi() {
      return rssi_;
    }
    /**
     * <pre>
     * RSSI.
     * </pre>
     *
     * <code>int32 rssi = 5;</code>
     * @param value The rssi to set.
     * @return This builder for chaining.
     */
    public Builder setRssi(int value) {
      
      rssi_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * RSSI.
     * </pre>
     *
     * <code>int32 rssi = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearRssi() {
      
      rssi_ = 0;
      onChanged();
      return this;
    }

    private double loraSnr_ ;
    /**
     * <pre>
     * LoRa SNR.
     * </pre>
     *
     * <code>double lora_snr = 6;</code>
     * @return The loraSnr.
     */
    @Override
    public double getLoraSnr() {
      return loraSnr_;
    }
    /**
     * <pre>
     * LoRa SNR.
     * </pre>
     *
     * <code>double lora_snr = 6;</code>
     * @param value The loraSnr to set.
     * @return This builder for chaining.
     */
    public Builder setLoraSnr(double value) {
      
      loraSnr_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * LoRa SNR.
     * </pre>
     *
     * <code>double lora_snr = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearLoraSnr() {
      
      loraSnr_ = 0D;
      onChanged();
      return this;
    }

    private int channel_ ;
    /**
     * <pre>
     * Channel.
     * </pre>
     *
     * <code>uint32 channel = 7;</code>
     * @return The channel.
     */
    @Override
    public int getChannel() {
      return channel_;
    }
    /**
     * <pre>
     * Channel.
     * </pre>
     *
     * <code>uint32 channel = 7;</code>
     * @param value The channel to set.
     * @return This builder for chaining.
     */
    public Builder setChannel(int value) {
      
      channel_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Channel.
     * </pre>
     *
     * <code>uint32 channel = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearChannel() {
      
      channel_ = 0;
      onChanged();
      return this;
    }

    private int rfChain_ ;
    /**
     * <pre>
     * RF Chain.
     * </pre>
     *
     * <code>uint32 rf_chain = 8;</code>
     * @return The rfChain.
     */
    @Override
    public int getRfChain() {
      return rfChain_;
    }
    /**
     * <pre>
     * RF Chain.
     * </pre>
     *
     * <code>uint32 rf_chain = 8;</code>
     * @param value The rfChain to set.
     * @return This builder for chaining.
     */
    public Builder setRfChain(int value) {
      
      rfChain_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * RF Chain.
     * </pre>
     *
     * <code>uint32 rf_chain = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearRfChain() {
      
      rfChain_ = 0;
      onChanged();
      return this;
    }

    private int board_ ;
    /**
     * <pre>
     * Board.
     * </pre>
     *
     * <code>uint32 board = 9;</code>
     * @return The board.
     */
    @Override
    public int getBoard() {
      return board_;
    }
    /**
     * <pre>
     * Board.
     * </pre>
     *
     * <code>uint32 board = 9;</code>
     * @param value The board to set.
     * @return This builder for chaining.
     */
    public Builder setBoard(int value) {
      
      board_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Board.
     * </pre>
     *
     * <code>uint32 board = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearBoard() {
      
      board_ = 0;
      onChanged();
      return this;
    }

    private int antenna_ ;
    /**
     * <pre>
     * Antenna.
     * </pre>
     *
     * <code>uint32 antenna = 10;</code>
     * @return The antenna.
     */
    @Override
    public int getAntenna() {
      return antenna_;
    }
    /**
     * <pre>
     * Antenna.
     * </pre>
     *
     * <code>uint32 antenna = 10;</code>
     * @param value The antenna to set.
     * @return This builder for chaining.
     */
    public Builder setAntenna(int value) {
      
      antenna_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Antenna.
     * </pre>
     *
     * <code>uint32 antenna = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearAntenna() {
      
      antenna_ = 0;
      onChanged();
      return this;
    }

    private io.chirpstack.api.Location location_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.chirpstack.api.Location, io.chirpstack.api.Location.Builder, io.chirpstack.api.LocationOrBuilder> locationBuilder_;
    /**
     * <pre>
     * Location.
     * </pre>
     *
     * <code>.common.Location location = 11;</code>
     * @return Whether the location field is set.
     */
    public boolean hasLocation() {
      return locationBuilder_ != null || location_ != null;
    }
    /**
     * <pre>
     * Location.
     * </pre>
     *
     * <code>.common.Location location = 11;</code>
     * @return The location.
     */
    public io.chirpstack.api.Location getLocation() {
      if (locationBuilder_ == null) {
        return location_ == null ? io.chirpstack.api.Location.getDefaultInstance() : location_;
      } else {
        return locationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Location.
     * </pre>
     *
     * <code>.common.Location location = 11;</code>
     */
    public Builder setLocation(io.chirpstack.api.Location value) {
      if (locationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        location_ = value;
        onChanged();
      } else {
        locationBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Location.
     * </pre>
     *
     * <code>.common.Location location = 11;</code>
     */
    public Builder setLocation(
        io.chirpstack.api.Location.Builder builderForValue) {
      if (locationBuilder_ == null) {
        location_ = builderForValue.build();
        onChanged();
      } else {
        locationBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Location.
     * </pre>
     *
     * <code>.common.Location location = 11;</code>
     */
    public Builder mergeLocation(io.chirpstack.api.Location value) {
      if (locationBuilder_ == null) {
        if (location_ != null) {
          location_ =
            io.chirpstack.api.Location.newBuilder(location_).mergeFrom(value).buildPartial();
        } else {
          location_ = value;
        }
        onChanged();
      } else {
        locationBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Location.
     * </pre>
     *
     * <code>.common.Location location = 11;</code>
     */
    public Builder clearLocation() {
      if (locationBuilder_ == null) {
        location_ = null;
        onChanged();
      } else {
        location_ = null;
        locationBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Location.
     * </pre>
     *
     * <code>.common.Location location = 11;</code>
     */
    public io.chirpstack.api.Location.Builder getLocationBuilder() {
      
      onChanged();
      return getLocationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Location.
     * </pre>
     *
     * <code>.common.Location location = 11;</code>
     */
    public io.chirpstack.api.LocationOrBuilder getLocationOrBuilder() {
      if (locationBuilder_ != null) {
        return locationBuilder_.getMessageOrBuilder();
      } else {
        return location_ == null ?
            io.chirpstack.api.Location.getDefaultInstance() : location_;
      }
    }
    /**
     * <pre>
     * Location.
     * </pre>
     *
     * <code>.common.Location location = 11;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.chirpstack.api.Location, io.chirpstack.api.Location.Builder, io.chirpstack.api.LocationOrBuilder> 
        getLocationFieldBuilder() {
      if (locationBuilder_ == null) {
        locationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.chirpstack.api.Location, io.chirpstack.api.Location.Builder, io.chirpstack.api.LocationOrBuilder>(
                getLocation(),
                getParentForChildren(),
                isClean());
        location_ = null;
      }
      return locationBuilder_;
    }

    private int fineTimestampType_ = 0;
    /**
     * <pre>
     * Fine-timestamp type.
     * </pre>
     *
     * <code>.gw.FineTimestampType fine_timestamp_type = 12;</code>
     * @return The enum numeric value on the wire for fineTimestampType.
     */
    @Override public int getFineTimestampTypeValue() {
      return fineTimestampType_;
    }
    /**
     * <pre>
     * Fine-timestamp type.
     * </pre>
     *
     * <code>.gw.FineTimestampType fine_timestamp_type = 12;</code>
     * @param value The enum numeric value on the wire for fineTimestampType to set.
     * @return This builder for chaining.
     */
    public Builder setFineTimestampTypeValue(int value) {
      
      fineTimestampType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Fine-timestamp type.
     * </pre>
     *
     * <code>.gw.FineTimestampType fine_timestamp_type = 12;</code>
     * @return The fineTimestampType.
     */
    @Override
    public FineTimestampType getFineTimestampType() {
      @SuppressWarnings("deprecation")
      FineTimestampType result = FineTimestampType.valueOf(fineTimestampType_);
      return result == null ? FineTimestampType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Fine-timestamp type.
     * </pre>
     *
     * <code>.gw.FineTimestampType fine_timestamp_type = 12;</code>
     * @param value The fineTimestampType to set.
     * @return This builder for chaining.
     */
    public Builder setFineTimestampType(FineTimestampType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      fineTimestampType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Fine-timestamp type.
     * </pre>
     *
     * <code>.gw.FineTimestampType fine_timestamp_type = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearFineTimestampType() {
      
      fineTimestampType_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        EncryptedFineTimestamp, EncryptedFineTimestamp.Builder, EncryptedFineTimestampOrBuilder> encryptedFineTimestampBuilder_;
    /**
     * <pre>
     * Encrypted fine-timestamp data.
     * </pre>
     *
     * <code>.gw.EncryptedFineTimestamp encrypted_fine_timestamp = 13;</code>
     * @return Whether the encryptedFineTimestamp field is set.
     */
    @Override
    public boolean hasEncryptedFineTimestamp() {
      return fineTimestampCase_ == 13;
    }
    /**
     * <pre>
     * Encrypted fine-timestamp data.
     * </pre>
     *
     * <code>.gw.EncryptedFineTimestamp encrypted_fine_timestamp = 13;</code>
     * @return The encryptedFineTimestamp.
     */
    @Override
    public EncryptedFineTimestamp getEncryptedFineTimestamp() {
      if (encryptedFineTimestampBuilder_ == null) {
        if (fineTimestampCase_ == 13) {
          return (EncryptedFineTimestamp) fineTimestamp_;
        }
        return EncryptedFineTimestamp.getDefaultInstance();
      } else {
        if (fineTimestampCase_ == 13) {
          return encryptedFineTimestampBuilder_.getMessage();
        }
        return EncryptedFineTimestamp.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Encrypted fine-timestamp data.
     * </pre>
     *
     * <code>.gw.EncryptedFineTimestamp encrypted_fine_timestamp = 13;</code>
     */
    public Builder setEncryptedFineTimestamp(EncryptedFineTimestamp value) {
      if (encryptedFineTimestampBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        fineTimestamp_ = value;
        onChanged();
      } else {
        encryptedFineTimestampBuilder_.setMessage(value);
      }
      fineTimestampCase_ = 13;
      return this;
    }
    /**
     * <pre>
     * Encrypted fine-timestamp data.
     * </pre>
     *
     * <code>.gw.EncryptedFineTimestamp encrypted_fine_timestamp = 13;</code>
     */
    public Builder setEncryptedFineTimestamp(
        EncryptedFineTimestamp.Builder builderForValue) {
      if (encryptedFineTimestampBuilder_ == null) {
        fineTimestamp_ = builderForValue.build();
        onChanged();
      } else {
        encryptedFineTimestampBuilder_.setMessage(builderForValue.build());
      }
      fineTimestampCase_ = 13;
      return this;
    }
    /**
     * <pre>
     * Encrypted fine-timestamp data.
     * </pre>
     *
     * <code>.gw.EncryptedFineTimestamp encrypted_fine_timestamp = 13;</code>
     */
    public Builder mergeEncryptedFineTimestamp(EncryptedFineTimestamp value) {
      if (encryptedFineTimestampBuilder_ == null) {
        if (fineTimestampCase_ == 13 &&
            fineTimestamp_ != EncryptedFineTimestamp.getDefaultInstance()) {
          fineTimestamp_ = EncryptedFineTimestamp.newBuilder((EncryptedFineTimestamp) fineTimestamp_)
              .mergeFrom(value).buildPartial();
        } else {
          fineTimestamp_ = value;
        }
        onChanged();
      } else {
        if (fineTimestampCase_ == 13) {
          encryptedFineTimestampBuilder_.mergeFrom(value);
        } else {
          encryptedFineTimestampBuilder_.setMessage(value);
        }
      }
      fineTimestampCase_ = 13;
      return this;
    }
    /**
     * <pre>
     * Encrypted fine-timestamp data.
     * </pre>
     *
     * <code>.gw.EncryptedFineTimestamp encrypted_fine_timestamp = 13;</code>
     */
    public Builder clearEncryptedFineTimestamp() {
      if (encryptedFineTimestampBuilder_ == null) {
        if (fineTimestampCase_ == 13) {
          fineTimestampCase_ = 0;
          fineTimestamp_ = null;
          onChanged();
        }
      } else {
        if (fineTimestampCase_ == 13) {
          fineTimestampCase_ = 0;
          fineTimestamp_ = null;
        }
        encryptedFineTimestampBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Encrypted fine-timestamp data.
     * </pre>
     *
     * <code>.gw.EncryptedFineTimestamp encrypted_fine_timestamp = 13;</code>
     */
    public EncryptedFineTimestamp.Builder getEncryptedFineTimestampBuilder() {
      return getEncryptedFineTimestampFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Encrypted fine-timestamp data.
     * </pre>
     *
     * <code>.gw.EncryptedFineTimestamp encrypted_fine_timestamp = 13;</code>
     */
    @Override
    public EncryptedFineTimestampOrBuilder getEncryptedFineTimestampOrBuilder() {
      if ((fineTimestampCase_ == 13) && (encryptedFineTimestampBuilder_ != null)) {
        return encryptedFineTimestampBuilder_.getMessageOrBuilder();
      } else {
        if (fineTimestampCase_ == 13) {
          return (EncryptedFineTimestamp) fineTimestamp_;
        }
        return EncryptedFineTimestamp.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Encrypted fine-timestamp data.
     * </pre>
     *
     * <code>.gw.EncryptedFineTimestamp encrypted_fine_timestamp = 13;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        EncryptedFineTimestamp, EncryptedFineTimestamp.Builder, EncryptedFineTimestampOrBuilder>
        getEncryptedFineTimestampFieldBuilder() {
      if (encryptedFineTimestampBuilder_ == null) {
        if (!(fineTimestampCase_ == 13)) {
          fineTimestamp_ = EncryptedFineTimestamp.getDefaultInstance();
        }
        encryptedFineTimestampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            EncryptedFineTimestamp, EncryptedFineTimestamp.Builder, EncryptedFineTimestampOrBuilder>(
                (EncryptedFineTimestamp) fineTimestamp_,
                getParentForChildren(),
                isClean());
        fineTimestamp_ = null;
      }
      fineTimestampCase_ = 13;
      onChanged();;
      return encryptedFineTimestampBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        PlainFineTimestamp, PlainFineTimestamp.Builder, PlainFineTimestampOrBuilder> plainFineTimestampBuilder_;
    /**
     * <pre>
     * Plain fine-timestamp data.
     * </pre>
     *
     * <code>.gw.PlainFineTimestamp plain_fine_timestamp = 14;</code>
     * @return Whether the plainFineTimestamp field is set.
     */
    @Override
    public boolean hasPlainFineTimestamp() {
      return fineTimestampCase_ == 14;
    }
    /**
     * <pre>
     * Plain fine-timestamp data.
     * </pre>
     *
     * <code>.gw.PlainFineTimestamp plain_fine_timestamp = 14;</code>
     * @return The plainFineTimestamp.
     */
    @Override
    public PlainFineTimestamp getPlainFineTimestamp() {
      if (plainFineTimestampBuilder_ == null) {
        if (fineTimestampCase_ == 14) {
          return (PlainFineTimestamp) fineTimestamp_;
        }
        return PlainFineTimestamp.getDefaultInstance();
      } else {
        if (fineTimestampCase_ == 14) {
          return plainFineTimestampBuilder_.getMessage();
        }
        return PlainFineTimestamp.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Plain fine-timestamp data.
     * </pre>
     *
     * <code>.gw.PlainFineTimestamp plain_fine_timestamp = 14;</code>
     */
    public Builder setPlainFineTimestamp(PlainFineTimestamp value) {
      if (plainFineTimestampBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        fineTimestamp_ = value;
        onChanged();
      } else {
        plainFineTimestampBuilder_.setMessage(value);
      }
      fineTimestampCase_ = 14;
      return this;
    }
    /**
     * <pre>
     * Plain fine-timestamp data.
     * </pre>
     *
     * <code>.gw.PlainFineTimestamp plain_fine_timestamp = 14;</code>
     */
    public Builder setPlainFineTimestamp(
        PlainFineTimestamp.Builder builderForValue) {
      if (plainFineTimestampBuilder_ == null) {
        fineTimestamp_ = builderForValue.build();
        onChanged();
      } else {
        plainFineTimestampBuilder_.setMessage(builderForValue.build());
      }
      fineTimestampCase_ = 14;
      return this;
    }
    /**
     * <pre>
     * Plain fine-timestamp data.
     * </pre>
     *
     * <code>.gw.PlainFineTimestamp plain_fine_timestamp = 14;</code>
     */
    public Builder mergePlainFineTimestamp(PlainFineTimestamp value) {
      if (plainFineTimestampBuilder_ == null) {
        if (fineTimestampCase_ == 14 &&
            fineTimestamp_ != PlainFineTimestamp.getDefaultInstance()) {
          fineTimestamp_ = PlainFineTimestamp.newBuilder((PlainFineTimestamp) fineTimestamp_)
              .mergeFrom(value).buildPartial();
        } else {
          fineTimestamp_ = value;
        }
        onChanged();
      } else {
        if (fineTimestampCase_ == 14) {
          plainFineTimestampBuilder_.mergeFrom(value);
        } else {
          plainFineTimestampBuilder_.setMessage(value);
        }
      }
      fineTimestampCase_ = 14;
      return this;
    }
    /**
     * <pre>
     * Plain fine-timestamp data.
     * </pre>
     *
     * <code>.gw.PlainFineTimestamp plain_fine_timestamp = 14;</code>
     */
    public Builder clearPlainFineTimestamp() {
      if (plainFineTimestampBuilder_ == null) {
        if (fineTimestampCase_ == 14) {
          fineTimestampCase_ = 0;
          fineTimestamp_ = null;
          onChanged();
        }
      } else {
        if (fineTimestampCase_ == 14) {
          fineTimestampCase_ = 0;
          fineTimestamp_ = null;
        }
        plainFineTimestampBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Plain fine-timestamp data.
     * </pre>
     *
     * <code>.gw.PlainFineTimestamp plain_fine_timestamp = 14;</code>
     */
    public PlainFineTimestamp.Builder getPlainFineTimestampBuilder() {
      return getPlainFineTimestampFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Plain fine-timestamp data.
     * </pre>
     *
     * <code>.gw.PlainFineTimestamp plain_fine_timestamp = 14;</code>
     */
    @Override
    public PlainFineTimestampOrBuilder getPlainFineTimestampOrBuilder() {
      if ((fineTimestampCase_ == 14) && (plainFineTimestampBuilder_ != null)) {
        return plainFineTimestampBuilder_.getMessageOrBuilder();
      } else {
        if (fineTimestampCase_ == 14) {
          return (PlainFineTimestamp) fineTimestamp_;
        }
        return PlainFineTimestamp.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Plain fine-timestamp data.
     * </pre>
     *
     * <code>.gw.PlainFineTimestamp plain_fine_timestamp = 14;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        PlainFineTimestamp, PlainFineTimestamp.Builder, PlainFineTimestampOrBuilder>
        getPlainFineTimestampFieldBuilder() {
      if (plainFineTimestampBuilder_ == null) {
        if (!(fineTimestampCase_ == 14)) {
          fineTimestamp_ = PlainFineTimestamp.getDefaultInstance();
        }
        plainFineTimestampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            PlainFineTimestamp, PlainFineTimestamp.Builder, PlainFineTimestampOrBuilder>(
                (PlainFineTimestamp) fineTimestamp_,
                getParentForChildren(),
                isClean());
        fineTimestamp_ = null;
      }
      fineTimestampCase_ = 14;
      onChanged();;
      return plainFineTimestampBuilder_;
    }

    private com.google.protobuf.ByteString context_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * Gateway specific context.
     * </pre>
     *
     * <code>bytes context = 15;</code>
     * @return The context.
     */
    @Override
    public com.google.protobuf.ByteString getContext() {
      return context_;
    }
    /**
     * <pre>
     * Gateway specific context.
     * </pre>
     *
     * <code>bytes context = 15;</code>
     * @param value The context to set.
     * @return This builder for chaining.
     */
    public Builder setContext(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      context_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Gateway specific context.
     * </pre>
     *
     * <code>bytes context = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearContext() {
      
      context_ = getDefaultInstance().getContext();
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString uplinkId_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * Uplink ID (UUID bytes).
     * Unique and random ID which can be used to correlate the uplink across multiple logs.
     * </pre>
     *
     * <code>bytes uplink_id = 16;</code>
     * @return The uplinkId.
     */
    @Override
    public com.google.protobuf.ByteString getUplinkId() {
      return uplinkId_;
    }
    /**
     * <pre>
     * Uplink ID (UUID bytes).
     * Unique and random ID which can be used to correlate the uplink across multiple logs.
     * </pre>
     *
     * <code>bytes uplink_id = 16;</code>
     * @param value The uplinkId to set.
     * @return This builder for chaining.
     */
    public Builder setUplinkId(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      uplinkId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Uplink ID (UUID bytes).
     * Unique and random ID which can be used to correlate the uplink across multiple logs.
     * </pre>
     *
     * <code>bytes uplink_id = 16;</code>
     * @return This builder for chaining.
     */
    public Builder clearUplinkId() {
      
      uplinkId_ = getDefaultInstance().getUplinkId();
      onChanged();
      return this;
    }

    private int crcStatus_ = 0;
    /**
     * <pre>
     * CRC status.
     * </pre>
     *
     * <code>.gw.CRCStatus crc_status = 17;</code>
     * @return The enum numeric value on the wire for crcStatus.
     */
    @Override public int getCrcStatusValue() {
      return crcStatus_;
    }
    /**
     * <pre>
     * CRC status.
     * </pre>
     *
     * <code>.gw.CRCStatus crc_status = 17;</code>
     * @param value The enum numeric value on the wire for crcStatus to set.
     * @return This builder for chaining.
     */
    public Builder setCrcStatusValue(int value) {
      
      crcStatus_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * CRC status.
     * </pre>
     *
     * <code>.gw.CRCStatus crc_status = 17;</code>
     * @return The crcStatus.
     */
    @Override
    public CRCStatus getCrcStatus() {
      @SuppressWarnings("deprecation")
      CRCStatus result = CRCStatus.valueOf(crcStatus_);
      return result == null ? CRCStatus.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * CRC status.
     * </pre>
     *
     * <code>.gw.CRCStatus crc_status = 17;</code>
     * @param value The crcStatus to set.
     * @return This builder for chaining.
     */
    public Builder setCrcStatus(CRCStatus value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      crcStatus_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * CRC status.
     * </pre>
     *
     * <code>.gw.CRCStatus crc_status = 17;</code>
     * @return This builder for chaining.
     */
    public Builder clearCrcStatus() {
      
      crcStatus_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        String, String> metadata_;
    private com.google.protobuf.MapField<String, String>
    internalGetMetadata() {
      if (metadata_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MetadataDefaultEntryHolder.defaultEntry);
      }
      return metadata_;
    }
    private com.google.protobuf.MapField<String, String>
    internalGetMutableMetadata() {
      onChanged();;
      if (metadata_ == null) {
        metadata_ = com.google.protobuf.MapField.newMapField(
            MetadataDefaultEntryHolder.defaultEntry);
      }
      if (!metadata_.isMutable()) {
        metadata_ = metadata_.copy();
      }
      return metadata_;
    }

    public int getMetadataCount() {
      return internalGetMetadata().getMap().size();
    }
    /**
     * <pre>
     * Optional meta-data map.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 18;</code>
     */

    @Override
    public boolean containsMetadata(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetMetadata().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMetadataMap()} instead.
     */
    @Override
    @Deprecated
    public java.util.Map<String, String> getMetadata() {
      return getMetadataMap();
    }
    /**
     * <pre>
     * Optional meta-data map.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 18;</code>
     */
    @Override

    public java.util.Map<String, String> getMetadataMap() {
      return internalGetMetadata().getMap();
    }
    /**
     * <pre>
     * Optional meta-data map.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 18;</code>
     */
    @Override

    public String getMetadataOrDefault(
        String key,
        String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<String, String> map =
          internalGetMetadata().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Optional meta-data map.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 18;</code>
     */
    @Override

    public String getMetadataOrThrow(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<String, String> map =
          internalGetMetadata().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearMetadata() {
      internalGetMutableMetadata().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Optional meta-data map.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 18;</code>
     */

    public Builder removeMetadata(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableMetadata().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @Deprecated
    public java.util.Map<String, String>
    getMutableMetadata() {
      return internalGetMutableMetadata().getMutableMap();
    }
    /**
     * <pre>
     * Optional meta-data map.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 18;</code>
     */
    public Builder putMetadata(
        String key,
        String value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutableMetadata().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * Optional meta-data map.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 18;</code>
     */

    public Builder putAllMetadata(
        java.util.Map<String, String> values) {
      internalGetMutableMetadata().getMutableMap()
          .putAll(values);
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:gw.UplinkRxInfoLegacy)
  }

  // @@protoc_insertion_point(class_scope:gw.UplinkRxInfoLegacy)
  private static final UplinkRxInfoLegacy DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new UplinkRxInfoLegacy();
  }

  public static UplinkRxInfoLegacy getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<UplinkRxInfoLegacy>
      PARSER = new com.google.protobuf.AbstractParser<UplinkRxInfoLegacy>() {
    @Override
    public UplinkRxInfoLegacy parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<UplinkRxInfoLegacy> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<UplinkRxInfoLegacy> getParserForType() {
    return PARSER;
  }

  @Override
  public UplinkRxInfoLegacy getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

