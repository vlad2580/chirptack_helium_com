// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/internal.proto

package io.chirpstack.restapi;

import io.chirpstack.restapi.GetDevicesSummaryResponseOrBuilder;

/**
 * Protobuf type {@code api.GetDevicesSummaryResponse}
 */
public final class GetDevicesSummaryResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:api.GetDevicesSummaryResponse)
        GetDevicesSummaryResponseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GetDevicesSummaryResponse.newBuilder() to construct.
  private GetDevicesSummaryResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GetDevicesSummaryResponse() {
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new GetDevicesSummaryResponse();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.chirpstack.restapi.InternalProto.internal_static_api_GetDevicesSummaryResponse_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 3:
        return internalGetDrCount();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.chirpstack.restapi.InternalProto.internal_static_api_GetDevicesSummaryResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.chirpstack.restapi.GetDevicesSummaryResponse.class, io.chirpstack.restapi.GetDevicesSummaryResponse.Builder.class);
  }

  public static final int ACTIVE_COUNT_FIELD_NUMBER = 1;
  private int activeCount_;
  /**
   * <pre>
   * Active count.
   * </pre>
   *
   * <code>uint32 active_count = 1;</code>
   * @return The activeCount.
   */
  @Override
  public int getActiveCount() {
    return activeCount_;
  }

  public static final int INACTIVE_COUNT_FIELD_NUMBER = 2;
  private int inactiveCount_;
  /**
   * <pre>
   * Inactive count.
   * </pre>
   *
   * <code>uint32 inactive_count = 2;</code>
   * @return The inactiveCount.
   */
  @Override
  public int getInactiveCount() {
    return inactiveCount_;
  }

  public static final int DR_COUNT_FIELD_NUMBER = 3;
  private static final class DrCountDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        Integer, Integer> defaultEntry =
            com.google.protobuf.MapEntry
            .<Integer, Integer>newDefaultInstance(
                io.chirpstack.restapi.InternalProto.internal_static_api_GetDevicesSummaryResponse_DrCountEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.UINT32,
                0,
                com.google.protobuf.WireFormat.FieldType.UINT32,
                0);
  }
  private com.google.protobuf.MapField<
      Integer, Integer> drCount_;
  private com.google.protobuf.MapField<Integer, Integer>
  internalGetDrCount() {
    if (drCount_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          DrCountDefaultEntryHolder.defaultEntry);
    }
    return drCount_;
  }

  public int getDrCountCount() {
    return internalGetDrCount().getMap().size();
  }
  /**
   * <pre>
   * per data-rate count.
   * Devices that have never been seen are excluded.
   * </pre>
   *
   * <code>map&lt;uint32, uint32&gt; dr_count = 3;</code>
   */

  @Override
  public boolean containsDrCount(
      int key) {
    
    return internalGetDrCount().getMap().containsKey(key);
  }
  /**
   * Use {@link #getDrCountMap()} instead.
   */
  @Override
  @Deprecated
  public java.util.Map<Integer, Integer> getDrCount() {
    return getDrCountMap();
  }
  /**
   * <pre>
   * per data-rate count.
   * Devices that have never been seen are excluded.
   * </pre>
   *
   * <code>map&lt;uint32, uint32&gt; dr_count = 3;</code>
   */
  @Override

  public java.util.Map<Integer, Integer> getDrCountMap() {
    return internalGetDrCount().getMap();
  }
  /**
   * <pre>
   * per data-rate count.
   * Devices that have never been seen are excluded.
   * </pre>
   *
   * <code>map&lt;uint32, uint32&gt; dr_count = 3;</code>
   */
  @Override

  public int getDrCountOrDefault(
      int key,
      int defaultValue) {
    
    java.util.Map<Integer, Integer> map =
        internalGetDrCount().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * per data-rate count.
   * Devices that have never been seen are excluded.
   * </pre>
   *
   * <code>map&lt;uint32, uint32&gt; dr_count = 3;</code>
   */
  @Override

  public int getDrCountOrThrow(
      int key) {
    
    java.util.Map<Integer, Integer> map =
        internalGetDrCount().getMap();
    if (!map.containsKey(key)) {
      throw new IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int NEVER_SEEN_COUNT_FIELD_NUMBER = 4;
  private int neverSeenCount_;
  /**
   * <pre>
   * Never seen count.
   * </pre>
   *
   * <code>uint32 never_seen_count = 4;</code>
   * @return The neverSeenCount.
   */
  @Override
  public int getNeverSeenCount() {
    return neverSeenCount_;
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (activeCount_ != 0) {
      output.writeUInt32(1, activeCount_);
    }
    if (inactiveCount_ != 0) {
      output.writeUInt32(2, inactiveCount_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeIntegerMapTo(
        output,
        internalGetDrCount(),
        DrCountDefaultEntryHolder.defaultEntry,
        3);
    if (neverSeenCount_ != 0) {
      output.writeUInt32(4, neverSeenCount_);
    }
    getUnknownFields().writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (activeCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(1, activeCount_);
    }
    if (inactiveCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(2, inactiveCount_);
    }
    for (java.util.Map.Entry<Integer, Integer> entry
         : internalGetDrCount().getMap().entrySet()) {
      com.google.protobuf.MapEntry<Integer, Integer>
      drCount__ = DrCountDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, drCount__);
    }
    if (neverSeenCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(4, neverSeenCount_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.chirpstack.restapi.GetDevicesSummaryResponse)) {
      return super.equals(obj);
    }
    io.chirpstack.restapi.GetDevicesSummaryResponse other = (io.chirpstack.restapi.GetDevicesSummaryResponse) obj;

    if (getActiveCount()
        != other.getActiveCount()) return false;
    if (getInactiveCount()
        != other.getInactiveCount()) return false;
    if (!internalGetDrCount().equals(
        other.internalGetDrCount())) return false;
    if (getNeverSeenCount()
        != other.getNeverSeenCount()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ACTIVE_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + getActiveCount();
    hash = (37 * hash) + INACTIVE_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + getInactiveCount();
    if (!internalGetDrCount().getMap().isEmpty()) {
      hash = (37 * hash) + DR_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + internalGetDrCount().hashCode();
    }
    hash = (37 * hash) + NEVER_SEEN_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + getNeverSeenCount();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.chirpstack.restapi.GetDevicesSummaryResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.chirpstack.restapi.GetDevicesSummaryResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.chirpstack.restapi.GetDevicesSummaryResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.chirpstack.restapi.GetDevicesSummaryResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.chirpstack.restapi.GetDevicesSummaryResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.chirpstack.restapi.GetDevicesSummaryResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.chirpstack.restapi.GetDevicesSummaryResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.chirpstack.restapi.GetDevicesSummaryResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.chirpstack.restapi.GetDevicesSummaryResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.chirpstack.restapi.GetDevicesSummaryResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.chirpstack.restapi.GetDevicesSummaryResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.chirpstack.restapi.GetDevicesSummaryResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.chirpstack.restapi.GetDevicesSummaryResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code api.GetDevicesSummaryResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:api.GetDevicesSummaryResponse)
      GetDevicesSummaryResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.chirpstack.restapi.InternalProto.internal_static_api_GetDevicesSummaryResponse_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetDrCount();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetMutableDrCount();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.chirpstack.restapi.InternalProto.internal_static_api_GetDevicesSummaryResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.chirpstack.restapi.GetDevicesSummaryResponse.class, io.chirpstack.restapi.GetDevicesSummaryResponse.Builder.class);
    }

    // Construct using io.chirpstack.restapi.GetDevicesSummaryResponse.newBuilder()
    private Builder() {

    }

    private Builder(
        BuilderParent parent) {
      super(parent);

    }
    @Override
    public Builder clear() {
      super.clear();
      activeCount_ = 0;

      inactiveCount_ = 0;

      internalGetMutableDrCount().clear();
      neverSeenCount_ = 0;

      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.chirpstack.restapi.InternalProto.internal_static_api_GetDevicesSummaryResponse_descriptor;
    }

    @Override
    public io.chirpstack.restapi.GetDevicesSummaryResponse getDefaultInstanceForType() {
      return io.chirpstack.restapi.GetDevicesSummaryResponse.getDefaultInstance();
    }

    @Override
    public io.chirpstack.restapi.GetDevicesSummaryResponse build() {
      io.chirpstack.restapi.GetDevicesSummaryResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public io.chirpstack.restapi.GetDevicesSummaryResponse buildPartial() {
      io.chirpstack.restapi.GetDevicesSummaryResponse result = new io.chirpstack.restapi.GetDevicesSummaryResponse(this);
      int from_bitField0_ = bitField0_;
      result.activeCount_ = activeCount_;
      result.inactiveCount_ = inactiveCount_;
      result.drCount_ = internalGetDrCount();
      result.drCount_.makeImmutable();
      result.neverSeenCount_ = neverSeenCount_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.chirpstack.restapi.GetDevicesSummaryResponse) {
        return mergeFrom((io.chirpstack.restapi.GetDevicesSummaryResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.chirpstack.restapi.GetDevicesSummaryResponse other) {
      if (other == io.chirpstack.restapi.GetDevicesSummaryResponse.getDefaultInstance()) return this;
      if (other.getActiveCount() != 0) {
        setActiveCount(other.getActiveCount());
      }
      if (other.getInactiveCount() != 0) {
        setInactiveCount(other.getInactiveCount());
      }
      internalGetMutableDrCount().mergeFrom(
          other.internalGetDrCount());
      if (other.getNeverSeenCount() != 0) {
        setNeverSeenCount(other.getNeverSeenCount());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              activeCount_ = input.readUInt32();

              break;
            } // case 8
            case 16: {
              inactiveCount_ = input.readUInt32();

              break;
            } // case 16
            case 26: {
              com.google.protobuf.MapEntry<Integer, Integer>
              drCount__ = input.readMessage(
                  DrCountDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableDrCount().getMutableMap().put(
                  drCount__.getKey(), drCount__.getValue());
              break;
            } // case 26
            case 32: {
              neverSeenCount_ = input.readUInt32();

              break;
            } // case 32
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int activeCount_ ;
    /**
     * <pre>
     * Active count.
     * </pre>
     *
     * <code>uint32 active_count = 1;</code>
     * @return The activeCount.
     */
    @Override
    public int getActiveCount() {
      return activeCount_;
    }
    /**
     * <pre>
     * Active count.
     * </pre>
     *
     * <code>uint32 active_count = 1;</code>
     * @param value The activeCount to set.
     * @return This builder for chaining.
     */
    public Builder setActiveCount(int value) {
      
      activeCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Active count.
     * </pre>
     *
     * <code>uint32 active_count = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearActiveCount() {
      
      activeCount_ = 0;
      onChanged();
      return this;
    }

    private int inactiveCount_ ;
    /**
     * <pre>
     * Inactive count.
     * </pre>
     *
     * <code>uint32 inactive_count = 2;</code>
     * @return The inactiveCount.
     */
    @Override
    public int getInactiveCount() {
      return inactiveCount_;
    }
    /**
     * <pre>
     * Inactive count.
     * </pre>
     *
     * <code>uint32 inactive_count = 2;</code>
     * @param value The inactiveCount to set.
     * @return This builder for chaining.
     */
    public Builder setInactiveCount(int value) {
      
      inactiveCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Inactive count.
     * </pre>
     *
     * <code>uint32 inactive_count = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearInactiveCount() {
      
      inactiveCount_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        Integer, Integer> drCount_;
    private com.google.protobuf.MapField<Integer, Integer>
    internalGetDrCount() {
      if (drCount_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            DrCountDefaultEntryHolder.defaultEntry);
      }
      return drCount_;
    }
    private com.google.protobuf.MapField<Integer, Integer>
    internalGetMutableDrCount() {
      onChanged();;
      if (drCount_ == null) {
        drCount_ = com.google.protobuf.MapField.newMapField(
            DrCountDefaultEntryHolder.defaultEntry);
      }
      if (!drCount_.isMutable()) {
        drCount_ = drCount_.copy();
      }
      return drCount_;
    }

    public int getDrCountCount() {
      return internalGetDrCount().getMap().size();
    }
    /**
     * <pre>
     * per data-rate count.
     * Devices that have never been seen are excluded.
     * </pre>
     *
     * <code>map&lt;uint32, uint32&gt; dr_count = 3;</code>
     */

    @Override
    public boolean containsDrCount(
        int key) {
      
      return internalGetDrCount().getMap().containsKey(key);
    }
    /**
     * Use {@link #getDrCountMap()} instead.
     */
    @Override
    @Deprecated
    public java.util.Map<Integer, Integer> getDrCount() {
      return getDrCountMap();
    }
    /**
     * <pre>
     * per data-rate count.
     * Devices that have never been seen are excluded.
     * </pre>
     *
     * <code>map&lt;uint32, uint32&gt; dr_count = 3;</code>
     */
    @Override

    public java.util.Map<Integer, Integer> getDrCountMap() {
      return internalGetDrCount().getMap();
    }
    /**
     * <pre>
     * per data-rate count.
     * Devices that have never been seen are excluded.
     * </pre>
     *
     * <code>map&lt;uint32, uint32&gt; dr_count = 3;</code>
     */
    @Override

    public int getDrCountOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<Integer, Integer> map =
          internalGetDrCount().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * per data-rate count.
     * Devices that have never been seen are excluded.
     * </pre>
     *
     * <code>map&lt;uint32, uint32&gt; dr_count = 3;</code>
     */
    @Override

    public int getDrCountOrThrow(
        int key) {
      
      java.util.Map<Integer, Integer> map =
          internalGetDrCount().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearDrCount() {
      internalGetMutableDrCount().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * per data-rate count.
     * Devices that have never been seen are excluded.
     * </pre>
     *
     * <code>map&lt;uint32, uint32&gt; dr_count = 3;</code>
     */

    public Builder removeDrCount(
        int key) {
      
      internalGetMutableDrCount().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @Deprecated
    public java.util.Map<Integer, Integer>
    getMutableDrCount() {
      return internalGetMutableDrCount().getMutableMap();
    }
    /**
     * <pre>
     * per data-rate count.
     * Devices that have never been seen are excluded.
     * </pre>
     *
     * <code>map&lt;uint32, uint32&gt; dr_count = 3;</code>
     */
    public Builder putDrCount(
        int key,
        int value) {
      
      
      internalGetMutableDrCount().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * per data-rate count.
     * Devices that have never been seen are excluded.
     * </pre>
     *
     * <code>map&lt;uint32, uint32&gt; dr_count = 3;</code>
     */

    public Builder putAllDrCount(
        java.util.Map<Integer, Integer> values) {
      internalGetMutableDrCount().getMutableMap()
          .putAll(values);
      return this;
    }

    private int neverSeenCount_ ;
    /**
     * <pre>
     * Never seen count.
     * </pre>
     *
     * <code>uint32 never_seen_count = 4;</code>
     * @return The neverSeenCount.
     */
    @Override
    public int getNeverSeenCount() {
      return neverSeenCount_;
    }
    /**
     * <pre>
     * Never seen count.
     * </pre>
     *
     * <code>uint32 never_seen_count = 4;</code>
     * @param value The neverSeenCount to set.
     * @return This builder for chaining.
     */
    public Builder setNeverSeenCount(int value) {
      
      neverSeenCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Never seen count.
     * </pre>
     *
     * <code>uint32 never_seen_count = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearNeverSeenCount() {
      
      neverSeenCount_ = 0;
      onChanged();
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:api.GetDevicesSummaryResponse)
  }

  // @@protoc_insertion_point(class_scope:api.GetDevicesSummaryResponse)
  private static final io.chirpstack.restapi.GetDevicesSummaryResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.chirpstack.restapi.GetDevicesSummaryResponse();
  }

  public static io.chirpstack.restapi.GetDevicesSummaryResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GetDevicesSummaryResponse>
      PARSER = new com.google.protobuf.AbstractParser<GetDevicesSummaryResponse>() {
    @Override
    public GetDevicesSummaryResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<GetDevicesSummaryResponse> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<GetDevicesSummaryResponse> getParserForType() {
    return PARSER;
  }

  @Override
  public io.chirpstack.restapi.GetDevicesSummaryResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

