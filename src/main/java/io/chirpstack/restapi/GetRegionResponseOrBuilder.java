// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/internal.proto

package io.chirpstack.restapi;

public interface GetRegionResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:api.GetRegionResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Name.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  String getName();
  /**
   * <pre>
   * Name.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * Region.
   * </pre>
   *
   * <code>.common.Region region = 2;</code>
   * @return The enum numeric value on the wire for region.
   */
  int getRegionValue();
  /**
   * <pre>
   * Region.
   * </pre>
   *
   * <code>.common.Region region = 2;</code>
   * @return The region.
   */
  io.chirpstack.api.Region getRegion();

  /**
   * <pre>
   * User information.
   * </pre>
   *
   * <code>string user_info = 3;</code>
   * @return The userInfo.
   */
  String getUserInfo();
  /**
   * <pre>
   * User information.
   * </pre>
   *
   * <code>string user_info = 3;</code>
   * @return The bytes for userInfo.
   */
  com.google.protobuf.ByteString
      getUserInfoBytes();

  /**
   * <pre>
   * Uplink channels.
   * </pre>
   *
   * <code>repeated .api.RegionChannel uplink_channels = 4;</code>
   */
  java.util.List<io.chirpstack.restapi.RegionChannel> 
      getUplinkChannelsList();
  /**
   * <pre>
   * Uplink channels.
   * </pre>
   *
   * <code>repeated .api.RegionChannel uplink_channels = 4;</code>
   */
  io.chirpstack.restapi.RegionChannel getUplinkChannels(int index);
  /**
   * <pre>
   * Uplink channels.
   * </pre>
   *
   * <code>repeated .api.RegionChannel uplink_channels = 4;</code>
   */
  int getUplinkChannelsCount();
  /**
   * <pre>
   * Uplink channels.
   * </pre>
   *
   * <code>repeated .api.RegionChannel uplink_channels = 4;</code>
   */
  java.util.List<? extends io.chirpstack.restapi.RegionChannelOrBuilder> 
      getUplinkChannelsOrBuilderList();
  /**
   * <pre>
   * Uplink channels.
   * </pre>
   *
   * <code>repeated .api.RegionChannel uplink_channels = 4;</code>
   */
  io.chirpstack.restapi.RegionChannelOrBuilder getUplinkChannelsOrBuilder(
      int index);

  /**
   * <pre>
   * RX1 delay.
   * </pre>
   *
   * <code>uint32 rx1_delay = 5;</code>
   * @return The rx1Delay.
   */
  int getRx1Delay();

  /**
   * <pre>
   * RX1 data-rate offset.
   * </pre>
   *
   * <code>uint32 rx1_dr_offset = 6;</code>
   * @return The rx1DrOffset.
   */
  int getRx1DrOffset();

  /**
   * <pre>
   * RX2 DR.
   * </pre>
   *
   * <code>uint32 rx2_dr = 7;</code>
   * @return The rx2Dr.
   */
  int getRx2Dr();

  /**
   * <pre>
   * RX2 frequency.
   * </pre>
   *
   * <code>uint32 rx2_frequency = 8;</code>
   * @return The rx2Frequency.
   */
  int getRx2Frequency();

  /**
   * <pre>
   * Class-B ping-slot DR.
   * </pre>
   *
   * <code>uint32 class_b_ping_slot_dr = 9;</code>
   * @return The classBPingSlotDr.
   */
  int getClassBPingSlotDr();

  /**
   * <pre>
   * Class-B ping-slot frequency.
   * </pre>
   *
   * <code>uint32 class_b_ping_slot_frequency = 10;</code>
   * @return The classBPingSlotFrequency.
   */
  int getClassBPingSlotFrequency();
}
